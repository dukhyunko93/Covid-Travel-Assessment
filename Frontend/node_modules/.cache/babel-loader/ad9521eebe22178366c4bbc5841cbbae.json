{"ast":null,"code":"var _jsxFileName = \"/Users/dukhyunko/Development/Covid-Travel/Covid-Travel-Risk-Assessment-Tool-frontend/src/components/Tripinfo.js\";\nimport CovidAssessment from './CovidAssessment';\nimport CovidGuidelines from './CovidGuidelines';\nimport CovidTable from './CovidTable';\nimport React from \"react\";\nimport { Drawer, ANCHOR } from 'baseui/drawer';\nimport { KIND } from 'baseui/notification';\nconst YESTERDAY = 13;\nexport const LEVELS = {\n  SEVERE: 'Level 1: Severe Uncontrolled Community Transmission',\n  SIGNIFICANT: 'Level 2: Significant Uncontrolled Community Transmission',\n  MODERATE: 'Level 3: Moderate, Controlled Transmission',\n  MINIMAL: 'Level 4: Minimal, Controlled Transmission'\n};\nexport const RISK_LEVELS = {\n  [LEVELS.SEVERE]: {\n    color: KIND.negative,\n    dailyLife: ['Stay home, except for essential activities', 'Avoid and cancel all gatherings of any size.', 'All vulnerable individuals (65+ or with pre-existing health conditions) stay home when possible.', 'Self-quarantine responsibly for 14 days if in close and prolonged contact with someone who has COVID-19.', 'Wear face coverings to protect others.', 'Essential workers practice special precautions to prevent spread.', 'Avoid non-essential business and personal travel. Follow state guidance for quarantine after visiting certain locations.', 'Avoid public transportation where possible.'],\n    groupLife: ['Cancel visits to nursing homes, long term care facilities, and hospitals.', 'Avoid and cancel all indoor and outdoor gatherings, including concerts, rodeos, large sporting events, etc. Schools and afterschool activities for youth close, as directed by educational authorities']\n  },\n  [LEVELS.SIGNIFICANT]: {},\n  [LEVELS.MODERATE]: {},\n  [LEVELS.MODERATE]: {},\n  [LEVELS.MINIMAL]: {}\n};\n\nclass Tripinfo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      population: \"\",\n      covidData: [],\n      isOpen: true\n    };\n\n    this.getCovidData = () => {\n      let config = {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n          Authorization: `Bearer ${this.props.token}`\n        }\n      };\n      fetch(`http://localhost:3001/nytdata/${this.props.destinationfips[0].fips}`, config).then(response => response.json()).then(response => {\n        this.setState({\n          covidData: response.data\n        });\n      });\n    };\n\n    this.getPopulation = () => {\n      let fips = this.props.destinationfips[0].fips;\n      let state;\n      let county;\n\n      if (fips.length < 5) {\n        state = \"0\" + fips.slice(0, 1);\n        county = fips.slice(-3);\n      } else {\n        state = fips.slice(0, 2);\n        county = fips.slice(-3);\n      }\n\n      fetch(`https://api.census.gov/data/2019/pep/population?get=COUNTY,DATE_CODE,DATE_DESC,DENSITY,POP,NAME,STATE&DATE_CODE=12&for=county:${county}&in=state:${state}&key=51999fa2f3c7bac02dceb923be5b78f0d135a3d6`).then(resp => resp.json()).then(data => {\n        var _data$;\n\n        this.setState({\n          population: data === null || data === void 0 ? void 0 : (_data$ = data[1]) === null || _data$ === void 0 ? void 0 : _data$[4]\n        });\n      });\n    };\n\n    this.getCasesDeltas = () => this.state.covidData.reduce((total, currentValue, currentIndex) => {\n      var _this$state$covidData, _currentValue$, _prevValue$;\n\n      if (currentIndex === 0 || currentIndex > this.state.covidData.length - 2) return total; // skip if the first day\n\n      const prevValue = (_this$state$covidData = this.state.covidData) === null || _this$state$covidData === void 0 ? void 0 : _this$state$covidData[currentIndex - 1];\n      const delta = ((currentValue === null || currentValue === void 0 ? void 0 : (_currentValue$ = currentValue[0]) === null || _currentValue$ === void 0 ? void 0 : _currentValue$.cases) || 0) - ((prevValue === null || prevValue === void 0 ? void 0 : (_prevValue$ = prevValue[0]) === null || _prevValue$ === void 0 ? void 0 : _prevValue$.cases) || 0);\n      return [...total, delta];\n    }, []);\n\n    this.getDeathsDeltas = () => this.state.covidData.reduce((total, currentValue, currentIndex) => {\n      var _this$state$covidData2, _currentValue$2, _prevValue$2;\n\n      if (currentIndex === 0 || currentIndex > this.state.covidData.length - 2) return total; // skip if the first day\n\n      const prevValue = (_this$state$covidData2 = this.state.covidData) === null || _this$state$covidData2 === void 0 ? void 0 : _this$state$covidData2[currentIndex - 1];\n      const delta = ((currentValue === null || currentValue === void 0 ? void 0 : (_currentValue$2 = currentValue[0]) === null || _currentValue$2 === void 0 ? void 0 : _currentValue$2.deaths) || 0) - ((prevValue === null || prevValue === void 0 ? void 0 : (_prevValue$2 = prevValue[0]) === null || _prevValue$2 === void 0 ? void 0 : _prevValue$2.deaths) || 0);\n      return [...total, delta];\n    }, []);\n\n    this.getLevelInfo = casesDeltas => {\n      const YESTERDAY_DATA = casesDeltas[YESTERDAY];\n      let level = LEVELS.MINIMAL;\n      let color = KIND.positive;\n\n      if (YESTERDAY_DATA > 400) {\n        level = LEVELS.SEVERE;\n        color = KIND.negative;\n      } else if (YESTERDAY_DATA > 201 && YESTERDAY_DATA < 400) {\n        level = LEVELS.SIGNIFICANT;\n        color = KIND.warning;\n      } else if (YESTERDAY_DATA > 101 && YESTERDAY_DATA < 20) {\n        level = LEVELS.MODERATE;\n        color = KIND.warning;\n      }\n\n      return {\n        level,\n        color\n      };\n    };\n  }\n\n  componentDidMount() {\n    this.getCovidData();\n    this.getPopulation();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props !== prevProps) {\n      this.getCovidData();\n      this.getPopulation();\n    }\n  }\n\n  render() {\n    var _this$state$covidData3, _this$state$covidData4, _this$state$covidData5, _this$state$covidData6, _this$state$covidData7, _this$state$covidData8;\n\n    const cases = this.getCasesDeltas();\n    const deaths = this.getDeathsDeltas();\n    const level = this.getLevelInfo(cases);\n    const delta = ((_this$state$covidData3 = this.state.covidData) === null || _this$state$covidData3 === void 0 ? void 0 : (_this$state$covidData4 = _this$state$covidData3[14]) === null || _this$state$covidData4 === void 0 ? void 0 : (_this$state$covidData5 = _this$state$covidData4[0]) === null || _this$state$covidData5 === void 0 ? void 0 : _this$state$covidData5.cases) - ((_this$state$covidData6 = this.state.covidData) === null || _this$state$covidData6 === void 0 ? void 0 : (_this$state$covidData7 = _this$state$covidData6[1]) === null || _this$state$covidData7 === void 0 ? void 0 : (_this$state$covidData8 = _this$state$covidData7[0]) === null || _this$state$covidData8 === void 0 ? void 0 : _this$state$covidData8.cases);\n    console.log('--level', level);\n    const guideline = RISK_LEVELS === null || RISK_LEVELS === void 0 ? void 0 : RISK_LEVELS[level.level];\n    console.log('--guideline', guideline);\n    return /*#__PURE__*/React.createElement(Drawer, {\n      onClose: () => this.setState({\n        isOpen: false\n      }),\n      isOpen: this.state.isOpen,\n      anchor: ANCHOR.bottom,\n      overrides: {\n        Root: {\n          style: ({\n            $theme\n          }) => {\n            return {\n              height: \"20%\"\n            };\n          }\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flexGrow: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CovidTable, {\n      population: this.state.population,\n      covidData: this.state.covidData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CovidAssessment, {\n      cases: cases[YESTERDAY],\n      death: deaths[YESTERDAY],\n      delta: delta,\n      level: level,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flexGrow: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CovidGuidelines, {\n      guideline: guideline,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n}\n\nexport default Tripinfo;","map":{"version":3,"sources":["/Users/dukhyunko/Development/Covid-Travel/Covid-Travel-Risk-Assessment-Tool-frontend/src/components/Tripinfo.js"],"names":["CovidAssessment","CovidGuidelines","CovidTable","React","Drawer","ANCHOR","KIND","YESTERDAY","LEVELS","SEVERE","SIGNIFICANT","MODERATE","MINIMAL","RISK_LEVELS","color","negative","dailyLife","groupLife","Tripinfo","Component","state","population","covidData","isOpen","getCovidData","config","method","headers","Accept","Authorization","props","token","fetch","destinationfips","fips","then","response","json","setState","data","getPopulation","county","length","slice","resp","getCasesDeltas","reduce","total","currentValue","currentIndex","prevValue","delta","cases","getDeathsDeltas","deaths","getLevelInfo","casesDeltas","YESTERDAY_DATA","level","positive","warning","componentDidMount","componentDidUpdate","prevProps","render","console","log","guideline","bottom","Root","style","$theme","height","display","flexGrow"],"mappings":";AAAA,OAAOA,eAAP,MAA4B,mBAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAAQC,MAAR,EAAgBC,MAAhB,QAA6B,eAA7B;AACA,SAAQC,IAAR,QAAmB,qBAAnB;AAEA,MAAMC,SAAS,GAAG,EAAlB;AACA,OAAO,MAAMC,MAAM,GAAG;AAClBC,EAAAA,MAAM,EAAE,qDADU;AAElBC,EAAAA,WAAW,EAAE,0DAFK;AAGlBC,EAAAA,QAAQ,EAAE,4CAHQ;AAIlBC,EAAAA,OAAO,EAAE;AAJS,CAAf;AAMP,OAAO,MAAMC,WAAW,GAAG;AACvB,GAACL,MAAM,CAACC,MAAR,GAAiB;AACbK,IAAAA,KAAK,EAAER,IAAI,CAACS,QADC;AAEbC,IAAAA,SAAS,EAAE,CACP,4CADO,EAEP,8CAFO,EAGP,kGAHO,EAIP,0GAJO,EAKP,wCALO,EAMP,mEANO,EAOP,0HAPO,EAQP,6CARO,CAFE;AAYbC,IAAAA,SAAS,EAAE,CACP,2EADO,EAEP,wMAFO;AAZE,GADM;AAkBvB,GAACT,MAAM,CAACE,WAAR,GAAsB,EAlBC;AAqBvB,GAACF,MAAM,CAACG,QAAR,GAAmB,EArBI;AAwBvB,GAACH,MAAM,CAACG,QAAR,GAAmB,EAxBI;AA2BvB,GAACH,MAAM,CAACI,OAAR,GAAkB;AA3BK,CAApB;;AAkCP,MAAMM,QAAN,SAAuBf,KAAK,CAACgB,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnCC,KAFmC,GAE3B;AACJC,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,SAAS,EAAE,EAFP;AAGJC,MAAAA,MAAM,EAAE;AAHJ,KAF2B;;AAAA,SAoBnCC,YApBmC,GAoBpB,MAAM;AACjB,UAAIC,MAAM,GAAG;AACTC,QAAAA,MAAM,EAAE,KADC;AAETC,QAAAA,OAAO,EAAE;AACT,0BAAgB,kBADP;AAETC,UAAAA,MAAM,EAAE,kBAFC;AAGTC,UAAAA,aAAa,EAAG,UAAS,KAAKC,KAAL,CAAWC,KAAM;AAHjC;AAFA,OAAb;AAQAC,MAAAA,KAAK,CAAE,iCAAgC,KAAKF,KAAL,CAAWG,eAAX,CAA2B,CAA3B,EAA8BC,IAAK,EAArE,EAAuET,MAAvE,CAAL,CACCU,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMC,QAAQ,IAAI;AACd,aAAKE,QAAL,CAAc;AAAChB,UAAAA,SAAS,EAAEc,QAAQ,CAACG;AAArB,SAAd;AACH,OAJD;AAKH,KAlCkC;;AAAA,SAqCnCC,aArCmC,GAqCnB,MAAM;AAClB,UAAIN,IAAI,GAAG,KAAKJ,KAAL,CAAWG,eAAX,CAA2B,CAA3B,EAA8BC,IAAzC;AACA,UAAId,KAAJ;AACA,UAAIqB,MAAJ;;AACA,UAAIP,IAAI,CAACQ,MAAL,GAAc,CAAlB,EAAoB;AAChBtB,QAAAA,KAAK,GAAG,MAAMc,IAAI,CAACS,KAAL,CAAW,CAAX,EAAa,CAAb,CAAd;AACAF,QAAAA,MAAM,GAAGP,IAAI,CAACS,KAAL,CAAW,CAAC,CAAZ,CAAT;AACH,OAHD,MAGO;AACHvB,QAAAA,KAAK,GAAGc,IAAI,CAACS,KAAL,CAAW,CAAX,EAAa,CAAb,CAAR;AACAF,QAAAA,MAAM,GAAGP,IAAI,CAACS,KAAL,CAAW,CAAC,CAAZ,CAAT;AACH;;AAEDX,MAAAA,KAAK,CAAE,iIAAgIS,MAAO,aAAYrB,KAAM,+CAA3J,CAAL,CACCe,IADD,CACMS,IAAI,IAAIA,IAAI,CAACP,IAAL,EADd,EAECF,IAFD,CAEMI,IAAI,IAAI;AAAA;;AAAE,aAAKD,QAAL,CAAc;AAC1BjB,UAAAA,UAAU,EAAEkB,IAAF,aAAEA,IAAF,iCAAEA,IAAI,CAAG,CAAH,CAAN,2CAAE,OAAY,CAAZ;AADc,SAAd;AAGf,OALD;AAMH,KAvDkC;;AAAA,SAyDnCM,cAzDmC,GAyDlB,MAAM,KAAKzB,KAAL,CAAWE,SAAX,CAAqBwB,MAArB,CAA4B,CAACC,KAAD,EAAQC,YAAR,EAAsBC,YAAtB,KAAuC;AAAA;;AACtF,UAAIA,YAAY,KAAK,CAAjB,IAAsBA,YAAY,GAAG,KAAK7B,KAAL,CAAWE,SAAX,CAAqBoB,MAArB,GAA8B,CAAvE,EAA0E,OAAOK,KAAP,CADY,CACE;;AACxF,YAAMG,SAAS,4BAAG,KAAK9B,KAAL,CAAWE,SAAd,0DAAG,sBAAuB2B,YAAY,GAAC,CAApC,CAAlB;AACA,YAAME,KAAK,GAAG,CAAC,CAAAH,YAAY,SAAZ,IAAAA,YAAY,WAAZ,8BAAAA,YAAY,CAAG,CAAH,CAAZ,kEAAmBI,KAAnB,KAA4B,CAA7B,KAAmC,CAAAF,SAAS,SAAT,IAAAA,SAAS,WAAT,2BAAAA,SAAS,CAAG,CAAH,CAAT,4DAAgBE,KAAhB,KAAyB,CAA5D,CAAd;AACA,aAAO,CAAC,GAAGL,KAAJ,EAAWI,KAAX,CAAP;AACH,KALsB,EAKpB,EALoB,CAzDY;;AAAA,SAgEnCE,eAhEmC,GAgEjB,MAAM,KAAKjC,KAAL,CAAWE,SAAX,CAAqBwB,MAArB,CAA4B,CAACC,KAAD,EAAQC,YAAR,EAAsBC,YAAtB,KAAuC;AAAA;;AACvF,UAAIA,YAAY,KAAK,CAAjB,IAAsBA,YAAY,GAAG,KAAK7B,KAAL,CAAWE,SAAX,CAAqBoB,MAArB,GAA8B,CAAvE,EAA0E,OAAOK,KAAP,CADa,CACC;;AACxF,YAAMG,SAAS,6BAAG,KAAK9B,KAAL,CAAWE,SAAd,2DAAG,uBAAuB2B,YAAY,GAAC,CAApC,CAAlB;AACA,YAAME,KAAK,GAAG,CAAC,CAAAH,YAAY,SAAZ,IAAAA,YAAY,WAAZ,+BAAAA,YAAY,CAAG,CAAH,CAAZ,oEAAmBM,MAAnB,KAA6B,CAA9B,KAAoC,CAAAJ,SAAS,SAAT,IAAAA,SAAS,WAAT,4BAAAA,SAAS,CAAG,CAAH,CAAT,8DAAgBI,MAAhB,KAA0B,CAA9D,CAAd;AACA,aAAO,CAAC,GAAGP,KAAJ,EAAWI,KAAX,CAAP;AACH,KALuB,EAKrB,EALqB,CAhEW;;AAAA,SAuEnCI,YAvEmC,GAuEnBC,WAAD,IAAiB;AAC5B,YAAMC,cAAc,GAAGD,WAAW,CAACjD,SAAD,CAAlC;AAEA,UAAImD,KAAK,GAAGlD,MAAM,CAACI,OAAnB;AACA,UAAIE,KAAK,GAAGR,IAAI,CAACqD,QAAjB;;AACA,UAAIF,cAAc,GAAG,GAArB,EAA0B;AACtBC,QAAAA,KAAK,GAAGlD,MAAM,CAACC,MAAf;AACAK,QAAAA,KAAK,GAAGR,IAAI,CAACS,QAAb;AACH,OAHD,MAGO,IAAI0C,cAAc,GAAG,GAAjB,IAAwBA,cAAc,GAAG,GAA7C,EAAkD;AACrDC,QAAAA,KAAK,GAAGlD,MAAM,CAACE,WAAf;AACAI,QAAAA,KAAK,GAAGR,IAAI,CAACsD,OAAb;AACH,OAHM,MAGA,IAAIH,cAAc,GAAG,GAAjB,IAAwBA,cAAc,GAAG,EAA7C,EAAiD;AACpDC,QAAAA,KAAK,GAAGlD,MAAM,CAACG,QAAf;AACAG,QAAAA,KAAK,GAAGR,IAAI,CAACsD,OAAb;AACH;;AACD,aAAO;AAACF,QAAAA,KAAD;AAAQ5C,QAAAA;AAAR,OAAP;AACH,KAvFkC;AAAA;;AAQnC+C,EAAAA,iBAAiB,GAAG;AAChB,SAAKrC,YAAL;AACA,SAAKgB,aAAL;AACH;;AAEDsB,EAAAA,kBAAkB,CAACC,SAAD,EAAW;AACzB,QAAG,KAAKjC,KAAL,KAAeiC,SAAlB,EAA4B;AACxB,WAAKvC,YAAL;AACA,WAAKgB,aAAL;AACH;AACJ;;AAuEDwB,EAAAA,MAAM,GAAG;AAAA;;AACL,UAAMZ,KAAK,GAAG,KAAKP,cAAL,EAAd;AACA,UAAMS,MAAM,GAAG,KAAKD,eAAL,EAAf;AACA,UAAMK,KAAK,GAAG,KAAKH,YAAL,CAAkBH,KAAlB,CAAd;AACA,UAAMD,KAAK,GAAG,gCAAK/B,KAAL,CAAWE,SAAX,4GAAuB,EAAvB,6GAA6B,CAA7B,mFAAiC8B,KAAjC,+BAAyC,KAAKhC,KAAL,CAAWE,SAApD,qFAAyC,uBAAuB,CAAvB,CAAzC,qFAAyC,uBAA4B,CAA5B,CAAzC,2DAAyC,uBAAgC8B,KAAzE,CAAd;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBR,KAAvB;AACA,UAAMS,SAAS,GAAGtD,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAG6C,KAAK,CAACA,KAAT,CAA7B;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BC,SAA3B;AAEA,wBACI,oBAAC,MAAD;AACI,MAAA,OAAO,EAAE,MAAM,KAAK7B,QAAL,CAAc;AAACf,QAAAA,MAAM,EAAE;AAAT,OAAd,CADnB;AAEI,MAAA,MAAM,EAAE,KAAKH,KAAL,CAAWG,MAFvB;AAGI,MAAA,MAAM,EAAElB,MAAM,CAAC+D,MAHnB;AAII,MAAA,SAAS,EAAE;AACPC,QAAAA,IAAI,EAAE;AACFC,UAAAA,KAAK,EAAE,CAAC;AAAEC,YAAAA;AAAF,WAAD,KAAgB;AACnB,mBAAO;AAAEC,cAAAA,MAAM,EAAE;AAAV,aAAP;AACH;AAHC;AADC,OAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAYA;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,UAAU,EAAE,KAAKtD,KAAL,CAAWC,UAAnC;AAA+C,MAAA,SAAS,EAAE,KAAKD,KAAL,CAAWE,SAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAE8B,KAAK,CAAC7C,SAAD,CAA7B;AAA0C,MAAA,KAAK,EAAE+C,MAAM,CAAC/C,SAAD,CAAvD;AAAoE,MAAA,KAAK,EAAE4C,KAA3E;AAAkF,MAAA,KAAK,EAAEO,KAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,eAOI;AAAK,MAAA,KAAK,EAAE;AAACgB,QAAAA,QAAQ,EAAE;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAEP,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPJ,CAZA,CADJ;AA2BH;;AA7HkC;;AAgIvC,eAAejD,QAAf","sourcesContent":["import CovidAssessment from './CovidAssessment'\nimport CovidGuidelines from './CovidGuidelines'\nimport CovidTable from './CovidTable'\nimport React from \"react\";\n\nimport {Drawer, ANCHOR} from 'baseui/drawer';\nimport {KIND} from 'baseui/notification';\n\nconst YESTERDAY = 13;\nexport const LEVELS = {\n    SEVERE: 'Level 1: Severe Uncontrolled Community Transmission',\n    SIGNIFICANT: 'Level 2: Significant Uncontrolled Community Transmission',\n    MODERATE: 'Level 3: Moderate, Controlled Transmission',\n    MINIMAL: 'Level 4: Minimal, Controlled Transmission',\n};\nexport const RISK_LEVELS = {\n    [LEVELS.SEVERE]: {\n        color: KIND.negative,\n        dailyLife: [\n            'Stay home, except for essential activities',\n            'Avoid and cancel all gatherings of any size.',\n            'All vulnerable individuals (65+ or with pre-existing health conditions) stay home when possible.',\n            'Self-quarantine responsibly for 14 days if in close and prolonged contact with someone who has COVID-19.',\n            'Wear face coverings to protect others.',\n            'Essential workers practice special precautions to prevent spread.',\n            'Avoid non-essential business and personal travel. Follow state guidance for quarantine after visiting certain locations.',\n            'Avoid public transportation where possible.',\n        ],\n        groupLife: [\n            'Cancel visits to nursing homes, long term care facilities, and hospitals.',\n            'Avoid and cancel all indoor and outdoor gatherings, including concerts, rodeos, large sporting events, etc. Schools and afterschool activities for youth close, as directed by educational authorities',\n        ],\n    },\n    [LEVELS.SIGNIFICANT]: {\n\n    },\n    [LEVELS.MODERATE]: {\n\n    },\n    [LEVELS.MODERATE]: {\n\n    },\n    [LEVELS.MINIMAL]: {\n\n    },\n\n\n};\n\nclass Tripinfo extends React.Component {\n\n    state = {\n        population: \"\",\n        covidData: [],\n        isOpen: true,\n    }\n\n    componentDidMount() {\n        this.getCovidData()\n        this.getPopulation()\n    }\n\n    componentDidUpdate(prevProps){\n        if(this.props !== prevProps){\n            this.getCovidData()\n            this.getPopulation()\n        }\n    }\n\n    getCovidData = () => {\n        let config = {\n            method: 'GET',\n            headers: {\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n            Authorization: `Bearer ${this.props.token}`\n            }\n        }\n        fetch(`http://localhost:3001/nytdata/${this.props.destinationfips[0].fips}`,config)\n        .then(response => response.json())\n        .then(response => {\n            this.setState({covidData: response.data})\n        })\n    }\n\n\n    getPopulation = () => {\n        let fips = this.props.destinationfips[0].fips\n        let state;\n        let county;\n        if (fips.length < 5){\n            state = \"0\" + fips.slice(0,1)\n            county = fips.slice(-3)\n        } else {\n            state = fips.slice(0,2)\n            county = fips.slice(-3)\n        }\n  \n        fetch(`https://api.census.gov/data/2019/pep/population?get=COUNTY,DATE_CODE,DATE_DESC,DENSITY,POP,NAME,STATE&DATE_CODE=12&for=county:${county}&in=state:${state}&key=51999fa2f3c7bac02dceb923be5b78f0d135a3d6`)\n        .then(resp => resp.json())\n        .then(data => { this.setState({\n            population: data?.[1]?.[4]\n            })\n        })\n    }\n\n    getCasesDeltas = () => this.state.covidData.reduce((total, currentValue, currentIndex) => {\n        if (currentIndex === 0 || currentIndex > this.state.covidData.length - 2) return total; // skip if the first day\n        const prevValue = this.state.covidData?.[currentIndex-1];\n        const delta = (currentValue?.[0]?.cases || 0) - (prevValue?.[0]?.cases || 0);\n        return [...total, delta];\n    }, []);\n\n    getDeathsDeltas = () => this.state.covidData.reduce((total, currentValue, currentIndex) => {\n        if (currentIndex === 0 || currentIndex > this.state.covidData.length - 2) return total; // skip if the first day\n        const prevValue = this.state.covidData?.[currentIndex-1];\n        const delta = (currentValue?.[0]?.deaths || 0) - (prevValue?.[0]?.deaths || 0);\n        return [...total, delta];\n    }, []);\n  \n    getLevelInfo = (casesDeltas) => {\n        const YESTERDAY_DATA = casesDeltas[YESTERDAY];\n\n        let level = LEVELS.MINIMAL;\n        let color = KIND.positive;\n        if (YESTERDAY_DATA > 400) {\n            level = LEVELS.SEVERE;\n            color = KIND.negative;\n        } else if (YESTERDAY_DATA > 201 && YESTERDAY_DATA < 400) {\n            level = LEVELS.SIGNIFICANT;\n            color = KIND.warning;\n        } else if (YESTERDAY_DATA > 101 && YESTERDAY_DATA < 20) {\n            level = LEVELS.MODERATE;\n            color = KIND.warning;\n        }\n        return {level, color};\n    }\n\n    render() {\n        const cases = this.getCasesDeltas();\n        const deaths = this.getDeathsDeltas();\n        const level = this.getLevelInfo(cases);\n        const delta = this.state.covidData?.[14]?.[0]?.cases - this.state.covidData?.[1]?.[0]?.cases;\n        console.log('--level', level)\n        const guideline = RISK_LEVELS?.[level.level];\n        console.log('--guideline', guideline)\n\n        return (\n            <Drawer\n                onClose={() => this.setState({isOpen: false})}\n                isOpen={this.state.isOpen}\n                anchor={ANCHOR.bottom}\n                overrides={{\n                    Root: {\n                        style: ({ $theme }) => {\n                            return { height: \"20%\" };\n                        }\n                    }\n                }}\n            >\n            <div style={{display: 'flex'}}>\n                <div style={{flexGrow: 5}}>\n                    <CovidTable population={this.state.population} covidData={this.state.covidData} />\n                </div>\n                <div>\n                    <CovidAssessment cases={cases[YESTERDAY]} death={deaths[YESTERDAY]} delta={delta} level={level} />\n                </div>\n                <div style={{flexGrow: 5}}>\n                    <CovidGuidelines guideline={guideline} />\n                </div>\n            </div>\n            \n          </Drawer>        \n        )\n    }\n}\n\nexport default Tripinfo;\n"]},"metadata":{},"sourceType":"module"}