{"ast":null,"code":"var _jsxFileName = \"/Users/dukhyunko/Development/Covid-Travel/Covid-Travel-Risk-Assessment-Tool-frontend/src/components/Search.js\";\nimport React from \"react\";\nimport { Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption } from \"@reach/combobox\";\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from \"use-places-autocomplete\";\n\nfunction Search({\n  panTo,\n  selectOrigin,\n  selectDeparture\n}) {\n  const {\n    value,\n    suggestions: {\n      status,\n      data\n    },\n    setValue,\n    clearSuggestions\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: {\n        lat: () => 40.7128,\n        lng: () => -74.0060\n      },\n      radius: 200 * 1000\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-bar1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Combobox, {\n    onSelect: async address => {\n      setValue(address, false);\n      clearSuggestions();\n\n      try {\n        const results = await getGeocode({\n          address\n        });\n        const {\n          lat,\n          lng\n        } = await getLatLng(results[0]);\n        panTo({\n          lat,\n          lng\n        });\n        {\n          selectOrigin({\n            lat,\n            lng\n          }, address);\n        }\n      } catch (error) {\n        console.log(\"Error!\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxInput, {\n    value: value,\n    onChange: e => {\n      setValue(e.target.value);\n    },\n    placeholder: \"Enter a address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ComboboxPopover, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, status === \"OK\" && data.map(({\n    place_id,\n    description\n  }) => /*#__PURE__*/React.createElement(ComboboxOption, {\n    key: place_id,\n    value: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-bar2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Combobox, {\n    onSelect: async address => {\n      setValue(address, false);\n      clearSuggestions();\n\n      try {\n        const results = await getGeocode({\n          address\n        });\n        const {\n          lat,\n          lng\n        } = await getLatLng(results[0]);\n        panTo({\n          lat,\n          lng\n        });\n        {\n          selectDeparture({\n            lat,\n            lng\n          }, address);\n        }\n      } catch (error) {\n        console.log(\"Error!\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxInput, {\n    value: value,\n    onChange: e => {\n      setValue(e.target.value);\n    },\n    placeholder: \"Enter a address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ComboboxPopover, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, status === \"OK\" && data.map(({\n    place_id,\n    description\n  }) => /*#__PURE__*/React.createElement(ComboboxOption, {\n    key: place_id,\n    value: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  })))))));\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/dukhyunko/Development/Covid-Travel/Covid-Travel-Risk-Assessment-Tool-frontend/src/components/Search.js"],"names":["React","Combobox","ComboboxInput","ComboboxPopover","ComboboxList","ComboboxOption","usePlacesAutocomplete","getGeocode","getLatLng","Search","panTo","selectOrigin","selectDeparture","value","suggestions","status","data","setValue","clearSuggestions","requestOptions","location","lat","lng","radius","address","results","error","console","log","e","target","map","place_id","description"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption} from \"@reach/combobox\";\nimport usePlacesAutocomplete, {getGeocode, getLatLng} from \"use-places-autocomplete\";\n\n\nfunction Search({ panTo, selectOrigin, selectDeparture }) {\n\n    const {\n      value, \n      suggestions:{status, data}, \n      setValue, \n      clearSuggestions,\n    } = usePlacesAutocomplete({\n      requestOptions: {\n        location: {lat: () => 40.7128, lng: () => -74.0060},\n        radius: 200 * 1000\n      }\n    })\n  \n    return (\n        <>\n          <div className=\"search-bar1\">\n            <Combobox \n              onSelect={async (address) => {\n                setValue(address, false);\n                clearSuggestions()\n                try {\n                  const results = await getGeocode({address});\n                  const { lat, lng } = await getLatLng(results[0]);\n                  panTo({ lat, lng });\n                  {selectOrigin({ lat, lng }, address)}\n                } catch(error){\n                  console.log(\"Error!\")\n                }\n              }}\n            >\n              <ComboboxInput \n                value={value} \n                onChange={(e) => {\n                  setValue(e.target.value)\n                }}\n                placeholder=\"Enter a address\"\n              />\n              <ComboboxPopover>\n                <ComboboxList>\n                  {status === \"OK\" && \n                    data.map(({place_id, description}) => (\n                      <ComboboxOption key={place_id} value={description}/>\n                    ))}\n                </ComboboxList>\n              </ComboboxPopover>\n            </Combobox>\n          </div>\n          <div className=\"search-bar2\">\n          <Combobox \n            onSelect={async (address) => {\n              setValue(address, false);\n              clearSuggestions()\n              try {\n                const results = await getGeocode({address});\n                const { lat, lng } = await getLatLng(results[0]);\n                panTo({ lat, lng });\n                {selectDeparture({ lat, lng }, address)}\n              } catch(error){\n                console.log(\"Error!\")\n              }\n            }}\n          >\n            <ComboboxInput \n              value={value} \n              onChange={(e) => {\n                setValue(e.target.value)\n              }}\n              placeholder=\"Enter a address\"\n            />\n            <ComboboxPopover>\n              <ComboboxList>\n                {status === \"OK\" && \n                  data.map(({place_id, description}) => (\n                    <ComboboxOption key={place_id} value={description}/>\n                  ))}\n              </ComboboxList>\n            </ComboboxPopover>\n          </Combobox>\n        </div>\n      </>\n    )\n  }\n  \nexport default Search;"]},"metadata":{},"sourceType":"module"}