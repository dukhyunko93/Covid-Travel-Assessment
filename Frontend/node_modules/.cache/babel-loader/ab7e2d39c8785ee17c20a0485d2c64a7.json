{"ast":null,"code":"var _jsxFileName = \"/Users/dukhyunko/Development/Covid-Travel/Covid-Travel-Risk-Assessment-Tool-frontend/src/components/Map.js\";\nimport React from \"react\";\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from \"use-places-autocomplete\";\nimport { Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption } from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\nimport mapStyles from './MapStyle';\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"80%\"\n};\nconst center = {\n  lat: 40.7128,\n  lng: -74.0060\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n  streetViewControl: true\n};\n\nfunction Map() {\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_KEY,\n    libraries\n  }); // 176 Lewis Ave, Brooklyn, NY 11221, USA\n  //mode input can be driving(default), walking bicycling\n\n  const getDirection = () => {\n    // const url = `https://maps.googleapis.com/maps/api/directions/json?origin=${lat,long}&destination=${lat,long}&mode${input}&key=${process.env.REACT_APP_GOOGLE_KEY}`\n    let proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n    fetch(proxyUrl + `https://maps.googleapis.com/maps/api/directions/json?origin=154+20+Ave+Flushing+NY&destination=176+Lewis+Ave+Brooklyn+NY&key=${process.env.REACT_APP_GOOGLE_KEY}`).then(response => response.json()).then(data => console.log(data.routes[0].legs[0].steps));\n  };\n\n  const snapToRoad = () => {\n    const url = `https://roads.googleapis.com/v1/snapToRoads?path=-35.27801,149.12958|-35.28032,149.12907|-35.28099,149.12929|-35.28144,149.12984|-35.28194,149.13003|-35.28282,149.12956|-35.28302,149.12881|-35.28473,149.12836&interpolate=true&key=${process.env.REACT_APP_GOOGLE_KEY}`;\n    fetch(url).then(response => response.json()).then(data => console.log(data));\n  };\n\n  const getFips = React.useCallback((lat, lng) => {\n    const url = `https://geo.fcc.gov/api/census/area?lat=${lat}&lon=${lng}&format=json`;\n    fetch(url).then(response => response.json()).then(data => {\n      setFips(() => [{\n        fips: data.results[0].county_fips,\n        county_name: data.results[0].county_name\n      }]);\n    });\n  }, []);\n  const onMapClick = React.useCallback(event => {\n    getDirection(); // snapToRoad()\n\n    getFips(event.latLng.lat(), event.latLng.lng());\n    const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${event.latLng.lat()},${event.latLng.lng()}&key=${process.env.REACT_APP_GOOGLE_KEY}`;\n    fetch(url).then(response => response.json()).then(data => {\n      setMarkers(() => [{\n        address: data.results[0].formatted_address,\n        lat: event.latLng.lat(),\n        lng: event.latLng.lng(),\n        time: new Date()\n      }]);\n    });\n  }, []);\n  const onLocate = React.useCallback(position => {\n    getFips(position.coords.latitude, position.coords.longitude);\n    const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${position.coords.latitude},${position.coords.longitude}&key=${process.env.REACT_APP_GOOGLE_KEY}`;\n    fetch(url).then(response => response.json()).then(data => {\n      setMarkers(() => [{\n        address: data.results[0].formatted_address,\n        lat: position.coords.latitude,\n        lng: position.coords.longitude,\n        time: new Date()\n      }]);\n    });\n  }, []);\n  const onSearchSelect = React.useCallback((grid, address) => {\n    setMarkers(() => [{\n      address: address,\n      lat: grid.lat,\n      lng: grid.lng,\n      time: new Date()\n    }]);\n  }, []);\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback(map => {\n    mapRef.current = map;\n  }, []);\n  const panTo = React.useCallback(({\n    lat,\n    lng\n  }) => {\n    mapRef.current.panTo({\n      lat,\n      lng\n    });\n    mapRef.current.setZoom(15);\n  }, []);\n  const [fips, setFips] = React.useState([]);\n  const [markers, setMarkers] = React.useState([]);\n  const [selected, setSelected] = React.useState([null]);\n  const [infoWindowVisible, setInfoWindowVisible] = React.useState(false);\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"Loading Mpas\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"map-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, \"Covid Hater\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"virus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, \"\\uD83E\\uDDA0\")), /*#__PURE__*/React.createElement(Locate, {\n    panTo: panTo,\n    onLocate: onLocate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Search, {\n    panTo: panTo,\n    onSearchSelect: onSearchSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: mapContainerStyle,\n    zoom: 8,\n    center: center,\n    options: options,\n    onClick: onMapClick,\n    onLoad: onMapLoad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, markers.map(marker => /*#__PURE__*/React.createElement(Marker, {\n    key: marker.time.toISOString(),\n    position: {\n      lat: marker.lat,\n      lng: marker.lng\n    },\n    icon: {\n      url: \"https://static.thenounproject.com/png/113403-200.png\",\n      scaledSize: new window.google.maps.Size(50, 50),\n      origin: new window.google.maps.Point(0, 0),\n      anchor: new window.google.maps.Point(25, 25)\n    },\n    onClick: () => {\n      setSelected(marker);\n      setInfoWindowVisible(!infoWindowVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  })), infoWindowVisible && /*#__PURE__*/React.createElement(InfoWindow, {\n    position: {\n      lat: selected.lat,\n      lng: selected.lng\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 19\n    }\n  }, \"Selected!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 19\n    }\n  }, \"Address: \", selected.address), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }\n  }, \"Latitude: \", selected.lat, \" Longitude:\", selected.lng))))));\n}\n\nexport default Map;\n\nfunction Locate({\n  panTo,\n  onLocate\n}) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"locate\",\n    onClick: () => {\n      navigator.geolocation.getCurrentPosition(position => {\n        panTo({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n        onLocate(position);\n      }, () => null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"compass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"compass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, \"\\uD83E\\uDDED \")));\n}\n\nfunction Search({\n  panTo,\n  onSearchSelect\n}) {\n  const {\n    value,\n    suggestions: {\n      status,\n      data\n    },\n    setValue,\n    clearSuggestions\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: {\n        lat: () => 40.7128,\n        lng: () => -74.0060\n      },\n      radius: 200 * 1000\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Combobox, {\n    onSelect: async address => {\n      setValue(address, false);\n      clearSuggestions();\n\n      try {\n        const results = await getGeocode({\n          address\n        });\n        const {\n          lat,\n          lng\n        } = await getLatLng(results[0]);\n        panTo({\n          lat,\n          lng\n        });\n        {\n          onSearchSelect({\n            lat,\n            lng\n          }, address);\n        }\n      } catch (error) {\n        console.log(\"Error!\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxInput, {\n    value: value,\n    onChange: e => {\n      setValue(e.target.value);\n    },\n    placeholder: \"Enter a address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ComboboxPopover, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }, status === \"OK\" && data.map(({\n    place_id,\n    description\n  }) => /*#__PURE__*/React.createElement(ComboboxOption, {\n    key: place_id,\n    value: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/dukhyunko/Development/Covid-Travel/Covid-Travel-Risk-Assessment-Tool-frontend/src/components/Map.js"],"names":["React","GoogleMap","useLoadScript","Marker","InfoWindow","usePlacesAutocomplete","getGeocode","getLatLng","Combobox","ComboboxInput","ComboboxPopover","ComboboxList","ComboboxOption","mapStyles","libraries","mapContainerStyle","width","height","center","lat","lng","options","styles","disableDefaultUI","zoomControl","streetViewControl","Map","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_KEY","getDirection","proxyUrl","fetch","then","response","json","data","console","log","routes","legs","steps","snapToRoad","url","getFips","useCallback","setFips","fips","results","county_fips","county_name","onMapClick","event","latLng","setMarkers","address","formatted_address","time","Date","onLocate","position","coords","latitude","longitude","onSearchSelect","grid","mapRef","useRef","onMapLoad","map","current","panTo","setZoom","useState","markers","selected","setSelected","infoWindowVisible","setInfoWindowVisible","marker","toISOString","scaledSize","window","google","maps","Size","origin","Point","anchor","Locate","navigator","geolocation","getCurrentPosition","Search","value","suggestions","status","setValue","clearSuggestions","requestOptions","location","radius","error","e","target","place_id","description"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {GoogleMap, useLoadScript, Marker, InfoWindow} from \"@react-google-maps/api\";\nimport usePlacesAutocomplete, {getGeocode, getLatLng} from \"use-places-autocomplete\";\nimport {Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption} from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\nimport mapStyles from './MapStyle';\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"80%\",\n}\n\nconst center = {\n  lat: 40.7128,\n  lng: -74.0060,\n}\n\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n  streetViewControl: true,\n}\n \nfunction Map() {\n\n    const {isLoaded, loadError} = useLoadScript({\n      googleMapsApiKey: process.env.REACT_APP_GOOGLE_KEY,\n      libraries,\n    });\n\n    // 176 Lewis Ave, Brooklyn, NY 11221, USA\n    \n    //mode input can be driving(default), walking bicycling\n    const getDirection = () => {\n      // const url = `https://maps.googleapis.com/maps/api/directions/json?origin=${lat,long}&destination=${lat,long}&mode${input}&key=${process.env.REACT_APP_GOOGLE_KEY}`\n      let proxyUrl = 'https://cors-anywhere.herokuapp.com/'\n      fetch(proxyUrl + `https://maps.googleapis.com/maps/api/directions/json?origin=154+20+Ave+Flushing+NY&destination=176+Lewis+Ave+Brooklyn+NY&key=${process.env.REACT_APP_GOOGLE_KEY}`)\n      .then(response => response.json())\n      .then(data => console.log(data.routes[0].legs[0].steps))\n    }\n\n    const snapToRoad = () => {\n      const url = `https://roads.googleapis.com/v1/snapToRoads?path=-35.27801,149.12958|-35.28032,149.12907|-35.28099,149.12929|-35.28144,149.12984|-35.28194,149.13003|-35.28282,149.12956|-35.28302,149.12881|-35.28473,149.12836&interpolate=true&key=${process.env.REACT_APP_GOOGLE_KEY}`\n      fetch( url)\n      .then(response => response.json())\n      .then(data => console.log(data))\n    }\n\n    const getFips = React.useCallback((lat, lng) => {\n      const url = `https://geo.fcc.gov/api/census/area?lat=${lat}&lon=${lng}&format=json`\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          setFips(() => [{\n            fips: data.results[0].county_fips,\n            county_name: data.results[0].county_name,\n          }]);\n      })\n    }, []);\n\n    const onMapClick = React.useCallback((event) => {\n      getDirection()\n      // snapToRoad()\n      getFips(event.latLng.lat(), event.latLng.lng())\n      const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${event.latLng.lat()},${event.latLng.lng()}&key=${process.env.REACT_APP_GOOGLE_KEY}`;\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          setMarkers(() => [{ \n            address: data.results[0].formatted_address,\n            lat: event.latLng.lat(),\n            lng: event.latLng.lng(),\n            time: new Date()\n          }]);\n      })\n    }, []);\n\n    const onLocate = React.useCallback((position) => {\n      getFips(position.coords.latitude, position.coords.longitude)\n      const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${position.coords.latitude},${position.coords.longitude}&key=${process.env.REACT_APP_GOOGLE_KEY}`;\n      fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        setMarkers(() => [{ \n          address: data.results[0].formatted_address,\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n          time: new Date()\n        }]);\n      })\n    }, []);\n\n    const onSearchSelect = React.useCallback((grid, address) => {\n      setMarkers(() => [{\n        address: address,\n        lat: grid.lat,\n        lng: grid.lng,\n        time: new Date()\n      }]);\n    }, []);\n    \n    const mapRef = React.useRef();\n    const onMapLoad = React.useCallback((map) => {\n      mapRef.current = map;\n    }, []);\n\n    const panTo = React.useCallback(({lat,lng}) => {\n      mapRef.current.panTo({lat,lng});\n      mapRef.current.setZoom(15);\n    }, []);\n\n    const [fips, setFips] = React.useState([]);\n    const [markers, setMarkers] = React.useState([]);\n    const [selected, setSelected] = React.useState([null]);\n\n    const [infoWindowVisible, setInfoWindowVisible] = React.useState(false);\n\n    if(loadError) return \"Error loading maps\";\n    if(!isLoaded) return \"Loading Mpas\";\n\n    return (\n      <div className=\"map-container\">\n        <div className=\"map\">\n          <h1 id=\"map-logo\">\n            Covid Hater{\" \"}\n            <span role=\"img\" aria-label=\"virus\">🦠</span>\n          </h1>\n          <Locate panTo={panTo} onLocate={onLocate} />\n          <Search panTo={panTo} onSearchSelect={onSearchSelect} />\n          <GoogleMap \n            mapContainerStyle={mapContainerStyle} \n            zoom={8} center={center} \n            options={options} \n            onClick={onMapClick} \n            onLoad={onMapLoad}\n          >\n            {markers.map((marker) => (\n              <Marker \n                key={marker.time.toISOString()} \n                position={{lat: marker.lat, lng: marker.lng}}\n                icon={{\n                  url:\"https://static.thenounproject.com/png/113403-200.png\",\n                  scaledSize: new window.google.maps.Size(50,50),\n                  origin: new window.google.maps.Point(0,0),\n                  anchor: new window.google.maps.Point(25,25),\n                }}\n                onClick={() => {\n                  setSelected(marker)\n                  setInfoWindowVisible(!infoWindowVisible)\n                }}\n              >\n              </Marker>\n            ))}\n\n            {infoWindowVisible && (\n              <InfoWindow position={{lat: selected.lat, lng: selected.lng}}>\n                <div>\n                  <h2>Selected!</h2>\n                  <p>Address: {selected.address}</p>\n                  <p>Latitude: {selected.lat} Longitude:{selected.lng}</p>\n                </div>\n              </InfoWindow>\n            )}\n          </GoogleMap>\n        </div>\n      </div>\n    );\n}\n\nexport default Map;\n\nfunction Locate({ panTo, onLocate }) {\n  return (\n    <button className=\"locate\" onClick={() => {\n      navigator.geolocation.getCurrentPosition((position) => {\n        panTo({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        });\n        onLocate(position)\n      }, \n      () => null);\n    }}>\n      <h1 className=\"compass\">\n        <span role=\"img\" aria-label=\"compass\">🧭 </span>\n      </h1>\n    </button>\n  )\n}\n\nfunction Search({ panTo, onSearchSelect }) {\n\n  const {\n    value, \n    suggestions:{status, data}, \n    setValue, \n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: {lat: () => 40.7128, lng: () => -74.0060},\n      radius: 200 * 1000\n    }\n  })\n\n  return (\n    <div className=\"search-bar\">\n      <Combobox \n        onSelect={async (address) => {\n          setValue(address, false);\n          clearSuggestions()\n          try {\n            const results = await getGeocode({address});\n            const { lat, lng } = await getLatLng(results[0]);\n            panTo({ lat, lng });\n            {onSearchSelect({ lat, lng }, address)}\n          } catch(error){\n            console.log(\"Error!\")\n          }\n        }}\n      >\n        <ComboboxInput \n          value={value} \n          onChange={(e) => {\n            setValue(e.target.value)\n          }}\n          placeholder=\"Enter a address\"\n        />\n        <ComboboxPopover>\n          <ComboboxList>\n            {status === \"OK\" && \n              data.map(({place_id, description}) => (\n                <ComboboxOption key={place_id} value={description}/>\n              ))}\n          </ComboboxList>\n        </ComboboxPopover>\n      </Combobox>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}