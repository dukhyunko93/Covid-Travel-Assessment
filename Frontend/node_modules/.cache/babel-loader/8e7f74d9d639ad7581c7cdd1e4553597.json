{"ast":null,"code":"var _jsxFileName = \"/Users/dukhyunko/Development/Covid-Travel/Covid-Travel-Risk-Assessment-Tool-frontend/src/components/Search.js\";\nimport React from \"react\";\nimport { Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption } from \"@reach/combobox\";\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from \"use-places-autocomplete\";\nconst {\n  value,\n  suggestions: {\n    status,\n    data\n  },\n  setValue,\n  clearSuggestions\n} = usePlacesAutocomplete({\n  requestOptions: {\n    location: {\n      lat: () => 40.7128,\n      lng: () => -74.0060\n    },\n    radius: 200 * 1000\n  }\n});\n\nclass Search extends React.Component() {\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-bar1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Combobox, {\n      onSelect: async address => {\n        setValue(address, false);\n        clearSuggestions();\n\n        try {\n          const results = await getGeocode({\n            address\n          });\n          const {\n            lat,\n            lng\n          } = await getLatLng(results[0]);\n          panTo({\n            lat,\n            lng\n          });\n          {\n            selectOrigin({\n              lat,\n              lng\n            }, address);\n          }\n        } catch (error) {\n          console.log(\"Error!\");\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ComboboxInput, {\n      value: value,\n      onChange: e => {\n        setValue(e.target.value);\n      },\n      placeholder: \"Enter a address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ComboboxPopover, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ComboboxList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }\n    }, status === \"OK\" && data.map(({\n      place_id,\n      description\n    }) => /*#__PURE__*/React.createElement(ComboboxOption, {\n      key: place_id,\n      value: description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-bar2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Combobox, {\n      onSelect: async address => {\n        setValue(address, false);\n        clearSuggestions();\n\n        try {\n          const results = await getGeocode({\n            address\n          });\n          const {\n            lat,\n            lng\n          } = await getLatLng(results[0]);\n          panTo({\n            lat,\n            lng\n          });\n          {\n            selectDeparture({\n              lat,\n              lng\n            }, address);\n          }\n        } catch (error) {\n          console.log(\"Error!\");\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ComboboxInput, {\n      value: value,\n      onChange: e => {\n        setValue(e.target.value);\n      },\n      placeholder: \"Enter a address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ComboboxPopover, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ComboboxList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, status === \"OK\" && data.map(({\n      place_id,\n      description\n    }) => /*#__PURE__*/React.createElement(ComboboxOption, {\n      key: place_id,\n      value: description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 23\n      }\n    })))))));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/dukhyunko/Development/Covid-Travel/Covid-Travel-Risk-Assessment-Tool-frontend/src/components/Search.js"],"names":["React","Combobox","ComboboxInput","ComboboxPopover","ComboboxList","ComboboxOption","usePlacesAutocomplete","getGeocode","getLatLng","value","suggestions","status","data","setValue","clearSuggestions","requestOptions","location","lat","lng","radius","Search","Component","render","address","results","panTo","selectOrigin","error","console","log","e","target","map","place_id","description","selectDeparture"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption} from \"@reach/combobox\";\nimport usePlacesAutocomplete, {getGeocode, getLatLng} from \"use-places-autocomplete\";\n\nconst {\n  value, \n  suggestions:{status, data}, \n  setValue, \n  clearSuggestions,\n} = usePlacesAutocomplete({\n  requestOptions: {\n    location: {lat: () => 40.7128, lng: () => -74.0060},\n    radius: 200 * 1000\n  }\n})\nclass Search extends React.Component () {\n\n    render() {\n      return (\n          <>\n            <div className=\"search-bar1\">\n              <Combobox \n                onSelect={async (address) => {\n                  setValue(address, false);\n                  clearSuggestions()\n                  try {\n                    const results = await getGeocode({address});\n                    const { lat, lng } = await getLatLng(results[0]);\n                    panTo({ lat, lng });\n                    {selectOrigin({ lat, lng }, address)}\n                  } catch(error){\n                    console.log(\"Error!\")\n                  }\n                }}\n              >\n                <ComboboxInput \n                  value={value} \n                  onChange={(e) => {\n                    setValue(e.target.value)\n                  }}\n                  placeholder=\"Enter a address\"\n                />\n                <ComboboxPopover>\n                  <ComboboxList>\n                    {status === \"OK\" && \n                      data.map(({place_id, description}) => (\n                        <ComboboxOption key={place_id} value={description}/>\n                      ))}\n                  </ComboboxList>\n                </ComboboxPopover>\n              </Combobox>\n            </div>\n            <div className=\"search-bar2\">\n            <Combobox \n              onSelect={async (address) => {\n                setValue(address, false);\n                clearSuggestions()\n                try {\n                  const results = await getGeocode({address});\n                  const { lat, lng } = await getLatLng(results[0]);\n                  panTo({ lat, lng });\n                  {selectDeparture({ lat, lng }, address)}\n                } catch(error){\n                  console.log(\"Error!\")\n                }\n              }}\n            >\n              <ComboboxInput \n                value={value} \n                onChange={(e) => {\n                  setValue(e.target.value)\n                }}\n                placeholder=\"Enter a address\"\n              />\n              <ComboboxPopover>\n                <ComboboxList>\n                  {status === \"OK\" && \n                    data.map(({place_id, description}) => (\n                      <ComboboxOption key={place_id} value={description}/>\n                    ))}\n                </ComboboxList>\n              </ComboboxPopover>\n            </Combobox>\n          </div>\n        </>\n      )\n    }\n  }\n  \nexport default Search;"]},"metadata":{},"sourceType":"module"}