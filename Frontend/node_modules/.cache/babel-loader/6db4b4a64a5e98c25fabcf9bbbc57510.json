{"ast":null,"code":"var _jsxFileName = \"/Users/dukhyunko/Development/Covid-Travel/Covid-Travel-Risk-Assessment-Tool-frontend/src/components/Map.js\";\nimport React, { Component } from \"react\";\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from \"use-places-autocomplete\";\nimport { Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption } from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\nimport mapStyles from './MapStyle';\nimport { Client } from \"@googlemaps/google-maps-services-js\";\nconst client = new Client({});\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"80%\"\n};\nconst center = {\n  lat: 40.7128,\n  lng: -74.0060\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n  streetViewControl: true\n};\n\nfunction Map() {\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_KEY,\n    libraries\n  }); // 1540 Broadway, New York, NY, USA\n\n  const onMapClick = React.useCallback(event => {\n    client.elevation({\n      params: {\n        locations: [{\n          lat: 45,\n          lng: -110\n        }],\n        key: \"asdf\"\n      },\n      timeout: 1000\n    }).then(r => {\n      console.log(r.data.results[0].elevation);\n    }).catch(e => {\n      console.log(e.response.data.error_message);\n    }); // let address = \n\n    setMarkers(() => [{\n      // address: \n      lat: event.latLng.lat(),\n      lng: event.latLng.lng(),\n      time: new Date()\n    }]);\n  }, []);\n  const onSearchSelect = React.useCallback((grid, address) => {\n    setMarkers(() => [{\n      address: address,\n      lat: grid.lat,\n      lng: grid.lng,\n      time: new Date()\n    }]);\n  }, []);\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback(map => {\n    mapRef.current = map;\n  }, []);\n  const panTo = React.useCallback(({\n    lat,\n    lng\n  }) => {\n    mapRef.current.panTo({\n      lat,\n      lng\n    });\n    mapRef.current.setZoom(14);\n  }, []);\n  const [markers, setMarkers] = React.useState([]);\n  const [selected, setSelected] = React.useState([null]);\n  const [infoWindowVisible, setInfoWindowVisible] = React.useState(false);\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"Loading Mpas\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"map-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Covid Hater\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"virus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, \"\\uD83E\\uDDA0\")), /*#__PURE__*/React.createElement(Locate, {\n    panTo: panTo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Search, {\n    panTo: panTo,\n    onSearchSelect: onSearchSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: mapContainerStyle,\n    zoom: 8,\n    center: center,\n    options: options,\n    onClick: onMapClick,\n    onLoad: onMapLoad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, markers.map(marker => /*#__PURE__*/React.createElement(Marker, {\n    key: marker.time.toISOString(),\n    position: {\n      lat: marker.lat,\n      lng: marker.lng\n    },\n    icon: {\n      url: \"https://static.thenounproject.com/png/113403-200.png\",\n      scaledSize: new window.google.maps.Size(50, 50),\n      origin: new window.google.maps.Point(0, 0),\n      anchor: new window.google.maps.Point(25, 25)\n    },\n    onClick: () => {\n      setSelected(marker);\n      setInfoWindowVisible(!infoWindowVisible); // console.log(marker.address)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  })), infoWindowVisible && /*#__PURE__*/React.createElement(InfoWindow, {\n    position: {\n      lat: selected.lat,\n      lng: selected.lng\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }\n  }, \"Selected!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 19\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }, \"Latitude: \", selected.lat, \" Longitude:\", selected.lng))))));\n}\n\nexport default Map;\n\nfunction Locate({\n  panTo\n}) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"locate\",\n    onClick: () => {\n      navigator.geolocation.getCurrentPosition(position => {\n        panTo({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      }, () => null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"compass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, \"\\uD83E\\uDDED\")));\n}\n\nfunction Search({\n  panTo,\n  onSearchSelect\n}) {\n  const {\n    value,\n    suggestions: {\n      status,\n      data\n    },\n    setValue,\n    clearSuggestions\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: {\n        lat: () => 40.7128,\n        lng: () => -74.0060\n      },\n      radius: 200 * 1000\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Combobox, {\n    onSelect: async address => {\n      setValue(address, false);\n      clearSuggestions();\n\n      try {\n        const results = await getGeocode({\n          address\n        });\n        const {\n          lat,\n          lng\n        } = await getLatLng(results[0]);\n        panTo({\n          lat,\n          lng\n        });\n        {\n          onSearchSelect({\n            lat,\n            lng\n          }, address);\n        }\n      } catch (error) {\n        console.log(\"Error!\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxInput, {\n    value: value,\n    onChange: e => {\n      setValue(e.target.value);\n    },\n    placeholder: \"Enter a address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ComboboxPopover, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, status === \"OK\" && data.map(({\n    place_id,\n    description\n  }) => /*#__PURE__*/React.createElement(ComboboxOption, {\n    key: place_id,\n    value: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/dukhyunko/Development/Covid-Travel/Covid-Travel-Risk-Assessment-Tool-frontend/src/components/Map.js"],"names":["React","Component","GoogleMap","useLoadScript","Marker","InfoWindow","usePlacesAutocomplete","getGeocode","getLatLng","Combobox","ComboboxInput","ComboboxPopover","ComboboxList","ComboboxOption","mapStyles","Client","client","libraries","mapContainerStyle","width","height","center","lat","lng","options","styles","disableDefaultUI","zoomControl","streetViewControl","Map","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_KEY","onMapClick","useCallback","event","elevation","params","locations","key","timeout","then","r","console","log","data","results","catch","e","response","error_message","setMarkers","latLng","time","Date","onSearchSelect","grid","address","mapRef","useRef","onMapLoad","map","current","panTo","setZoom","markers","useState","selected","setSelected","infoWindowVisible","setInfoWindowVisible","marker","toISOString","url","scaledSize","window","google","maps","Size","origin","Point","anchor","Locate","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","Search","value","suggestions","status","setValue","clearSuggestions","requestOptions","location","radius","error","target","place_id","description"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {GoogleMap, useLoadScript, Marker, InfoWindow} from \"@react-google-maps/api\";\nimport usePlacesAutocomplete, {getGeocode, getLatLng} from \"use-places-autocomplete\";\nimport {Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption} from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\nimport mapStyles from './MapStyle'\nimport {Client} from \"@googlemaps/google-maps-services-js\";\nconst client = new Client({});\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"80%\",\n}\n\nconst center = {\n  lat: 40.7128,\n  lng: -74.0060,\n}\n\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n  streetViewControl: true,\n}\n \nfunction Map() {\n\n    const {isLoaded, loadError} = useLoadScript({\n      googleMapsApiKey: process.env.REACT_APP_GOOGLE_KEY,\n      libraries,\n    });\n    // 1540 Broadway, New York, NY, USA\n\n    const onMapClick = React.useCallback((event) => { \n      \n      client.elevation({\n        params: {\n          locations: [{ lat: 45, lng: -110 }],\n          key: \"asdf\",\n        },timeout: 1000})\n      .then((r) => {\n        console.log(r.data.results[0].elevation);\n      })\n      .catch((e) => {\n        console.log(e.response.data.error_message);\n      });\n\n      // let address = \n      setMarkers(() => [{ \n        // address: \n        lat: event.latLng.lat(),\n        lng: event.latLng.lng(),\n        time: new Date()\n      }]);\n    }, []);\n\n    const onSearchSelect = React.useCallback((grid, address) => {\n      setMarkers(() => [{\n        address: address,\n        lat: grid.lat,\n        lng: grid.lng,\n        time: new Date()\n      }]);\n    }, []);\n    \n    const mapRef = React.useRef();\n    const onMapLoad = React.useCallback((map) => {\n      mapRef.current = map;\n    }, []);\n\n    const panTo = React.useCallback(({lat,lng}) => {\n      mapRef.current.panTo({lat,lng});\n      mapRef.current.setZoom(14);\n    }, []);\n\n    const [markers, setMarkers] = React.useState([]);\n    const [selected, setSelected] = React.useState([null]);\n\n    const [infoWindowVisible, setInfoWindowVisible] = React.useState(false);\n\n    if(loadError) return \"Error loading maps\";\n    if(!isLoaded) return \"Loading Mpas\";\n    \n    return (\n      <div className=\"map-container\">\n        <div className=\"map\">\n          <h1 id=\"map-logo\">\n            Covid Hater{\" \"}\n            <span role=\"img\" aria-label=\"virus\">\n              🦠\n            </span>\n          </h1>\n          <Locate panTo={panTo} />\n          <Search panTo={panTo} onSearchSelect={onSearchSelect} />\n          <GoogleMap \n            mapContainerStyle={mapContainerStyle} \n            zoom={8} center={center} \n            options={options} \n            onClick={onMapClick} \n            onLoad={onMapLoad}\n          >\n            {markers.map((marker) => (\n              <Marker \n                key={marker.time.toISOString()} \n                position={{lat: marker.lat, lng: marker.lng}}\n                icon={{\n                  url:\"https://static.thenounproject.com/png/113403-200.png\",\n                  scaledSize: new window.google.maps.Size(50,50),\n                  origin: new window.google.maps.Point(0,0),\n                  anchor: new window.google.maps.Point(25,25),\n                }}\n                onClick={() => {\n                  setSelected(marker)\n                  setInfoWindowVisible(!infoWindowVisible)\n                  // console.log(marker.address)\n                }}\n              >\n              </Marker>\n            ))}\n\n            {infoWindowVisible && (\n              <InfoWindow position={{lat: selected.lat, lng: selected.lng}}>\n                <div>\n                  <h2>Selected!</h2>\n                  <p>Address</p>\n                  <p>Latitude: {selected.lat} Longitude:{selected.lng}</p>\n                </div>\n              </InfoWindow>\n            )}\n          </GoogleMap>\n        </div>\n      </div>\n    );\n}\n\nexport default Map;\n\nfunction Locate({ panTo }) {\n  return (\n    <button className=\"locate\" onClick={() => {\n      navigator.geolocation.getCurrentPosition((position) => {\n        panTo({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        });\n      }, \n      () => null);\n    }}>\n      <h1 className=\"compass\">\n        <span role=\"img\">\n          🧭 \n        </span>\n      </h1>\n    </button>\n  )\n}\n\nfunction Search({ panTo, onSearchSelect }) {\n\n  const {\n    value, \n    suggestions:{status, data}, \n    setValue, \n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: {lat: () => 40.7128, lng: () => -74.0060},\n      radius: 200 * 1000\n    }\n  })\n\n  return (\n    <div className=\"search-bar\">\n      <Combobox \n        onSelect={async (address) => {\n          setValue(address, false);\n          clearSuggestions()\n          try {\n            const results = await getGeocode({address});\n            const { lat, lng } = await getLatLng(results[0]);\n            panTo({ lat, lng });\n            {onSearchSelect({ lat, lng }, address)}\n\n          } catch(error){\n            console.log(\"Error!\")\n          }\n        }}\n      >\n        <ComboboxInput \n          value={value} \n          onChange={(e) => {\n            setValue(e.target.value)\n          }}\n          placeholder=\"Enter a address\"\n        />\n        <ComboboxPopover>\n          <ComboboxList>\n            {status === \"OK\" && \n              data.map(({place_id, description}) => (\n                <ComboboxOption key={place_id} value={description}/>\n              ))}\n          </ComboboxList>\n        </ComboboxPopover>\n      </Combobox>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}