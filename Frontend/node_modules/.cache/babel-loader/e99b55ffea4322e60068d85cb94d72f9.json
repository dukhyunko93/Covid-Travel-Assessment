{"ast":null,"code":"var _jsxFileName = \"/Users/dukhyunko/Development/Covid-Travel/Covid-Travel-Risk-Assessment-Tool-frontend/src/components/Map.js\";\nimport React from \"react\";\nimport Tripinfo from \"./Tripinfo\";\nimport { GoogleMap, useLoadScript, Marker, InfoWindow, DirectionsRenderer } from \"@react-google-maps/api\";\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from \"use-places-autocomplete\";\nimport { Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption } from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\nimport mapStyles from './MapStyle';\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"100%\"\n};\nconst center = {\n  lat: 40.7128,\n  lng: -74.0060\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n  streetViewControl: true\n};\n\nfunction openRightNav() {\n  document.getElementById(\"mySidenav\").style.width = \"250px\";\n}\n\nfunction closeRightNav() {\n  document.getElementById(\"mySidenav\").style.width = \"0\";\n}\n\nfunction openLeftNav() {\n  document.getElementById(\"left-nav\").style.width = \"250px\";\n  document.querySelector(\"button.closebtn\").style.display = \"\";\n  document.querySelector(\"button.open-search\").style.display = \"none\";\n}\n\nfunction closeLeftNav() {\n  document.getElementById(\"left-nav\").style.width = \"0%\";\n  document.querySelector(\"button.closebtn\").style.display = \"none\";\n  document.querySelector(\"button.open-search\").style.display = \"\";\n} // not very practical right now. in terms of getting direction\n// direction button on the clicked location\n// grab all the county on the way to the destination\n// create new component with all the direction score (button to save the trip)\n// population / 100,000 * cases\n// Intermittent issue with asynch fetch - promises return late after render, maybe need useEffect?\n// Repositioning map to route and center point\n\n\nfunction Map(props) {\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_KEY,\n    libraries\n  });\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback(map => {\n    mapRef.current = map;\n  }, []);\n  const panTo = React.useCallback(({\n    lat,\n    lng\n  }) => {\n    mapRef.current.panTo({\n      lat,\n      lng\n    });\n    mapRef.current.setZoom(15);\n  }, []);\n\n  const applyAddress = () => {\n    openRightNav();\n    getDirection(origin, destination);\n    getOriginFips(`${origin[0].lat}`, `${origin[0].lng}`);\n    getDestinationFips(`${destination[0].lat}`, `${destination[0].lng}`);\n  }; //mode input can be driving(default), walking bicycling &mode=driving\n\n\n  const getClickedFips = React.useCallback((lat, lng) => {\n    const url = `https://geo.fcc.gov/api/census/area?lat=${lat}&lon=${lng}&format=json`;\n    fetch(url).then(response => response.json()).then(data => {\n      setClickedFips(() => [{\n        fips: data.results[0].county_fips,\n        county_name: data.results[0].county_name\n      }]);\n    });\n  }, []);\n  const getCurrentFips = React.useCallback((lat, lng) => {\n    const url = `https://geo.fcc.gov/api/census/area?lat=${lat}&lon=${lng}&format=json`;\n    fetch(url).then(response => response.json()).then(data => {\n      setCurrentFips(() => [{\n        fips: data.results[0].county_fips,\n        county_name: data.results[0].county_name\n      }]);\n    });\n  }, []);\n  const getOriginFips = React.useCallback((lat, lng) => {\n    const url = `https://geo.fcc.gov/api/census/area?lat=${lat}&lon=${lng}&format=json`;\n    fetch(url).then(response => response.json()).then(data => {\n      setOriginFips(() => [{\n        fips: data.results[0].county_fips,\n        county_name: data.results[0].county_name\n      }]);\n    });\n  }, []);\n  const getDestinationFips = React.useCallback((lat, lng) => {\n    const url = `https://geo.fcc.gov/api/census/area?lat=${lat}&lon=${lng}&format=json`;\n    fetch(url).then(response => response.json()).then(data => {\n      console.log(\"MAP getDestinationFips\", data);\n      setDestinationFips(() => [{\n        fips: data.results[0].county_fips,\n        county_name: data.results[0].county_name\n      }]);\n    });\n  }, []);\n  const onMapClick = React.useCallback(event => {\n    getClickedFips(event.latLng.lat(), event.latLng.lng());\n    const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${event.latLng.lat()},${event.latLng.lng()}&key=${process.env.REACT_APP_GOOGLE_KEY}`;\n    fetch(url).then(response => response.json()).then(data => {\n      setMarkers(() => [{\n        address: data.results[0].formatted_address,\n        lat: event.latLng.lat(),\n        lng: event.latLng.lng(),\n        time: new Date()\n      }]);\n    });\n  }, []);\n  const onLocate = React.useCallback(position => {\n    getCurrentFips(position.coords.latitude, position.coords.longitude);\n    const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${position.coords.latitude},${position.coords.longitude}&key=${process.env.REACT_APP_GOOGLE_KEY}`;\n    fetch(url).then(response => response.json()).then(data => {\n      setMarkers(() => [{\n        address: data.results[0].formatted_address,\n        lat: position.coords.latitude,\n        lng: position.coords.longitude,\n        time: new Date()\n      }]);\n    });\n  }, []);\n  const selectOrigin = React.useCallback((grid, address) => {\n    setOrigin(() => [{\n      address: address,\n      lat: grid.lat,\n      lng: grid.lng,\n      time: new Date()\n    }]);\n  }, []);\n  const selectDestination = React.useCallback((grid, address) => {\n    setDestination(() => [{\n      address: address,\n      lat: grid.lat,\n      lng: grid.lng,\n      time: new Date()\n    }]);\n  }, []);\n\n  const getDirection = (origin, destination) => {\n    const DirectionsService = new window.google.maps.DirectionsService();\n    DirectionsService.route({\n      origin: new window.google.maps.LatLng(origin[0].lat, origin[0].lng),\n      destination: new window.google.maps.LatLng(destination[0].lat, destination[0].lng),\n      travelMode: window.google.maps.TravelMode.DRIVING\n    }, (result, status) => {\n      if (status === window.google.maps.DirectionsStatus.OK) {\n        let coordinates = [];\n        let legs = result.routes[0].legs;\n\n        for (let i = 0; i < legs.length; i++) {\n          let steps = legs[i].steps;\n\n          for (let j = 0; j < steps.length; j++) {\n            let nextSegment = steps[j].path;\n\n            for (let k = 0; k < nextSegment.length; k++) {\n              coordinates.push({\n                lat: nextSegment[k].lat(),\n                lng: nextSegment[k].lng()\n              });\n            }\n          }\n        }\n\n        setPath(() => [{\n          path: coordinates,\n          directionInfo: result\n        }]);\n      } else {\n        console.error(`error fetching directions ${result}`);\n      }\n    });\n  };\n\n  const [currentfips, setCurrentFips] = React.useState([]);\n  const [clickedfips, setClickedFips] = React.useState([]);\n  const [originfips, setOriginFips] = React.useState([]);\n  const [destinationfips, setDestinationFips] = React.useState([]);\n  const [markers, setMarkers] = React.useState([]);\n  const [selected, setSelected] = React.useState([null]);\n  const [origin, setOrigin] = React.useState([]);\n  const [destination, setDestination] = React.useState([]);\n  const [path, setPath] = React.useState([]); //error handling for path coordinates\n\n  const [infoWindowVisible, setInfoWindowVisible] = React.useState(false);\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"Loading Mpas\";\n  console.log(\"199 MAP.js DestinationFIPS\", destinationfips);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: mapContainerStyle,\n    zoom: 8,\n    center: center,\n    options: options,\n    onClick: onMapClick,\n    onLoad: onMapLoad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"open-search\",\n    onClick: openLeftNav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 15\n    }\n  }, \">\"), /*#__PURE__*/React.createElement(Locate, {\n    panTo: panTo,\n    onLocate: onLocate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"left-nav\",\n    className: \"left-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(SearchDestination, {\n    panTo: panTo,\n    selectDestination: selectDestination,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"direction-button\",\n    onClick: origin && destination ? applyAddress : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }, \"Search\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"closebtn\",\n    onClick: closeLeftNav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 15\n    }\n  }, \"<\"), markers.map(marker => /*#__PURE__*/React.createElement(Marker, {\n    key: marker.time.toISOString(),\n    position: {\n      lat: marker.lat,\n      lng: marker.lng\n    },\n    icon: {\n      url: \"https://static.thenounproject.com/png/113403-200.png\",\n      scaledSize: new window.google.maps.Size(50, 50),\n      origin: new window.google.maps.Point(0, 0),\n      anchor: new window.google.maps.Point(25, 25)\n    },\n    onClick: () => {\n      setSelected(marker);\n      setInfoWindowVisible(!infoWindowVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 17\n    }\n  })), origin.map(marker => /*#__PURE__*/React.createElement(Marker, {\n    key: marker.time.toISOString(),\n    position: {\n      lat: marker.lat,\n      lng: marker.lng\n    },\n    icon: {\n      url: \"https://static.thenounproject.com/png/113403-200.png\",\n      scaledSize: new window.google.maps.Size(50, 50),\n      origin: new window.google.maps.Point(0, 0),\n      anchor: new window.google.maps.Point(25, 25)\n    },\n    onClick: () => {\n      setSelected(marker);\n      setInfoWindowVisible(!infoWindowVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  })), destination.map(marker => /*#__PURE__*/React.createElement(Marker, {\n    key: marker.time.toISOString(),\n    position: {\n      lat: marker.lat,\n      lng: marker.lng\n    },\n    icon: {\n      url: \"https://static.thenounproject.com/png/113403-200.png\",\n      scaledSize: new window.google.maps.Size(50, 50),\n      origin: new window.google.maps.Point(0, 0),\n      anchor: new window.google.maps.Point(25, 25)\n    },\n    onClick: () => {\n      setSelected(marker);\n      setInfoWindowVisible(!infoWindowVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 17\n    }\n  })), infoWindowVisible && /*#__PURE__*/React.createElement(InfoWindow, {\n    position: {\n      lat: selected.lat,\n      lng: selected.lng\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 21\n    }\n  }, \"Selected!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 21\n    }\n  }, \"Address: \", selected.address), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 21\n    }\n  }, \"Latitude: \", selected.lat, \" Longitude:\", selected.lng))), destinationfips.length > 0 && path.length > 0 ? /*#__PURE__*/React.createElement(DirectionsRenderer, {\n    directions: path[0].directionInfo,\n    panel: document.getElementById('panel'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 67\n    }\n  }) : null), destinationfips.length > 0 && path.length > 0 ? /*#__PURE__*/React.createElement(Tripinfo, {\n    direction: path[0].directionInfo,\n    token: props.token,\n    destinationfips: destinationfips,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 62\n    }\n  }) : null), destinationfips.length > 0 && path.length > 0 ? /*#__PURE__*/React.createElement(Tripinfo, {\n    direction: path[0].directionInfo,\n    token: props.token,\n    destinationfips: destinationfips,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 60\n    }\n  }) : null, destinationfips.length > 0 && path.length > 0 ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"show-direction\",\n    onClick: openRightNav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 60\n    }\n  }, \"Show Direction\") : null, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"mySidenav\",\n    className: \"sidenav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"closebtn\",\n    onClick: closeRightNav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  })));\n}\n\nexport default Map;\n\nfunction Locate({\n  panTo,\n  onLocate\n}) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"locate\",\n    onClick: () => {\n      navigator.geolocation.getCurrentPosition(position => {\n        panTo({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n        onLocate(position);\n      }, () => null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"compass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"compass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 9\n    }\n  }, \"\\uD83E\\uDDED\")));\n}\n\nfunction SearchOrigin({\n  panTo,\n  selectOrigin\n}) {\n  const {\n    value,\n    suggestions: {\n      status,\n      data\n    },\n    setValue,\n    clearSuggestions\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: {\n        lat: () => 40.7128,\n        lng: () => -74.0060\n      },\n      radius: 200 * 1000\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-bar1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Combobox, {\n    onSelect: async address => {\n      setValue(address, false);\n      clearSuggestions();\n\n      try {\n        const results = await getGeocode({\n          address\n        });\n        const {\n          lat,\n          lng\n        } = await getLatLng(results[0]);\n        panTo({\n          lat,\n          lng\n        });\n        {\n          selectOrigin({\n            lat,\n            lng\n          }, address);\n        }\n      } catch (error) {\n        console.log(\"Error!\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxInput, {\n    value: value,\n    onChange: e => {\n      setValue(e.target.value);\n    },\n    placeholder: \"Enter a start address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ComboboxPopover, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 13\n    }\n  }, status === \"OK\" && data.map(({\n    place_id,\n    description\n  }) => /*#__PURE__*/React.createElement(ComboboxOption, {\n    key: place_id,\n    value: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 19\n    }\n  }))))));\n}\n\nfunction SearchDestination({\n  panTo,\n  selectDestination\n}) {\n  const {\n    value,\n    suggestions: {\n      status,\n      data\n    },\n    setValue,\n    clearSuggestions\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: {\n        lat: () => 40.7128,\n        lng: () => -74.0060\n      },\n      radius: 200 * 1000\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-bar2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Combobox, {\n    onSelect: async address => {\n      setValue(address, false);\n      clearSuggestions();\n\n      try {\n        const results = await getGeocode({\n          address\n        });\n        const {\n          lat,\n          lng\n        } = await getLatLng(results[0]);\n        panTo({\n          lat,\n          lng\n        });\n        {\n          selectDestination({\n            lat,\n            lng\n          }, address);\n        }\n      } catch (error) {\n        console.log(\"Error!\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxInput, {\n    value: value,\n    onChange: e => {\n      setValue(e.target.value);\n    },\n    placeholder: \"Enter a destination address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ComboboxPopover, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 13\n    }\n  }, status === \"OK\" && data.map(({\n    place_id,\n    description\n  }) => /*#__PURE__*/React.createElement(ComboboxOption, {\n    key: place_id,\n    value: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 19\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/dukhyunko/Development/Covid-Travel/Covid-Travel-Risk-Assessment-Tool-frontend/src/components/Map.js"],"names":["React","Tripinfo","GoogleMap","useLoadScript","Marker","InfoWindow","DirectionsRenderer","usePlacesAutocomplete","getGeocode","getLatLng","Combobox","ComboboxInput","ComboboxPopover","ComboboxList","ComboboxOption","mapStyles","libraries","mapContainerStyle","width","height","center","lat","lng","options","styles","disableDefaultUI","zoomControl","streetViewControl","openRightNav","document","getElementById","style","closeRightNav","openLeftNav","querySelector","display","closeLeftNav","Map","props","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_KEY","mapRef","useRef","onMapLoad","useCallback","map","current","panTo","setZoom","applyAddress","getDirection","origin","destination","getOriginFips","getDestinationFips","getClickedFips","url","fetch","then","response","json","data","setClickedFips","fips","results","county_fips","county_name","getCurrentFips","setCurrentFips","setOriginFips","console","log","setDestinationFips","onMapClick","event","latLng","setMarkers","address","formatted_address","time","Date","onLocate","position","coords","latitude","longitude","selectOrigin","grid","setOrigin","selectDestination","setDestination","DirectionsService","window","google","maps","route","LatLng","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","coordinates","legs","routes","i","length","steps","j","nextSegment","path","k","push","setPath","directionInfo","error","currentfips","useState","clickedfips","originfips","destinationfips","markers","selected","setSelected","infoWindowVisible","setInfoWindowVisible","marker","toISOString","scaledSize","Size","Point","anchor","token","Locate","navigator","geolocation","getCurrentPosition","SearchOrigin","value","suggestions","setValue","clearSuggestions","requestOptions","location","radius","e","target","place_id","description","SearchDestination"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Tripinfo from \"./Tripinfo\"\nimport {GoogleMap, useLoadScript, Marker, InfoWindow, DirectionsRenderer} from \"@react-google-maps/api\";\nimport usePlacesAutocomplete, {getGeocode, getLatLng} from \"use-places-autocomplete\";\nimport {Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption} from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\nimport mapStyles from './MapStyle';\nconst libraries = [\"places\"];\n\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"100%\",\n}\n\nconst center = {\n  lat: 40.7128,\n  lng: -74.0060,\n}\n\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n  streetViewControl: true,\n}\n\nfunction openRightNav() {\n  document.getElementById(\"mySidenav\").style.width = \"250px\";\n}\n\nfunction closeRightNav() {\n  document.getElementById(\"mySidenav\").style.width = \"0\";\n}\n\nfunction openLeftNav() {\n  document.getElementById(\"left-nav\").style.width = \"250px\";\n  document.querySelector(\"button.closebtn\").style.display = \"\"\n  document.querySelector(\"button.open-search\").style.display = \"none\"\n}\n\nfunction closeLeftNav() {\n  document.getElementById(\"left-nav\").style.width = \"0%\";\n  document.querySelector(\"button.closebtn\").style.display = \"none\"\n  document.querySelector(\"button.open-search\").style.display = \"\"\n}\n \n// not very practical right now. in terms of getting direction\n// direction button on the clicked location\n// grab all the county on the way to the destination\n// create new component with all the direction score (button to save the trip)\n// population / 100,000 * cases\n// Intermittent issue with asynch fetch - promises return late after render, maybe need useEffect?\n// Repositioning map to route and center point\n\nfunction Map(props) {\n    const {isLoaded, loadError} = useLoadScript({\n      googleMapsApiKey: process.env.REACT_APP_GOOGLE_KEY,\n      libraries,\n    });\n\n    const mapRef = React.useRef();\n    const onMapLoad = React.useCallback((map) => {\n      mapRef.current = map;\n    }, []);\n\n    const panTo = React.useCallback(({lat,lng}) => {\n      mapRef.current.panTo({lat,lng});\n      mapRef.current.setZoom(15);\n    }, []);\n\n    const applyAddress = () => {\n      openRightNav()\n      getDirection(origin, destination)\n      getOriginFips(`${origin[0].lat}`, `${origin[0].lng}`)\n      getDestinationFips(`${destination[0].lat}`, `${destination[0].lng}`)\n    }\n\n    //mode input can be driving(default), walking bicycling &mode=driving\n    \n    const getClickedFips = React.useCallback((lat, lng) => {\n      const url = `https://geo.fcc.gov/api/census/area?lat=${lat}&lon=${lng}&format=json`\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          setClickedFips(() => [{\n            fips: data.results[0].county_fips,\n            county_name: data.results[0].county_name,\n          }]);\n      })\n    }, [])\n\n    const getCurrentFips = React.useCallback((lat, lng) => {\n      const url = `https://geo.fcc.gov/api/census/area?lat=${lat}&lon=${lng}&format=json`\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          setCurrentFips(() => [{\n            fips: data.results[0].county_fips,\n            county_name: data.results[0].county_name,\n          }]);\n      })\n    }, [])\n\n    const getOriginFips = React.useCallback((lat, lng) => {\n      const url = `https://geo.fcc.gov/api/census/area?lat=${lat}&lon=${lng}&format=json`\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          setOriginFips(() => [{\n            fips: data.results[0].county_fips,\n            county_name: data.results[0].county_name,\n          }]);\n      })\n    }, [])\n\n    const getDestinationFips = React.useCallback((lat, lng) => {\n      const url = `https://geo.fcc.gov/api/census/area?lat=${lat}&lon=${lng}&format=json`\n      fetch(url)\n        .then(response => response.json())\n        .then(data => { console.log(\"MAP getDestinationFips\", data)\n          setDestinationFips(() => [{\n            fips: data.results[0].county_fips,\n            county_name: data.results[0].county_name,\n          }]);\n      })\n    }, [])\n   \n    const onMapClick = React.useCallback((event) => {\n      getClickedFips(event.latLng.lat(), event.latLng.lng())\n      const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${event.latLng.lat()},${event.latLng.lng()}&key=${process.env.REACT_APP_GOOGLE_KEY}`;\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          setMarkers(() => [\n            { \n              address: data.results[0].formatted_address,\n              lat: event.latLng.lat(),\n              lng: event.latLng.lng(),\n              time: new Date()\n          }]);\n      })\n    }, []);\n\n    const onLocate = React.useCallback((position) => {\n      getCurrentFips(position.coords.latitude, position.coords.longitude)\n      const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${position.coords.latitude},${position.coords.longitude}&key=${process.env.REACT_APP_GOOGLE_KEY}`;\n      fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        setMarkers(() => [{ \n          address: data.results[0].formatted_address,\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n          time: new Date()\n        }]);\n      })\n    }, []);\n\n    const selectOrigin = React.useCallback((grid, address) => {\n      setOrigin(() => [{\n        address: address,\n        lat: grid.lat,\n        lng: grid.lng,\n        time: new Date()\n      }]);\n    }, []);\n\n    const selectDestination = React.useCallback((grid, address) => {\n      setDestination(() => [{\n        address: address,\n        lat: grid.lat,\n        lng: grid.lng,\n        time: new Date()\n      }]);\n    }, []);\n    \n    const getDirection = (origin, destination) => {\n      const DirectionsService = new window.google.maps.DirectionsService();\n      DirectionsService.route({\n        origin: new window.google.maps.LatLng(origin[0].lat, origin[0].lng),\n        destination: new window.google.maps.LatLng(destination[0].lat, destination[0].lng),\n        travelMode: window.google.maps.TravelMode.DRIVING,\n      },(result, status) => {\n        if (status === window.google.maps.DirectionsStatus.OK) {\n          let coordinates = []\n          let legs = result.routes[0].legs;\n          for (let i = 0; i < legs.length; i++) {\n            let steps = legs[i].steps;\n            for (let j = 0; j < steps.length; j++) {\n              let nextSegment = steps[j].path;\n              for (let k = 0; k < nextSegment.length; k++) {\n                coordinates.push({lat: nextSegment[k].lat(), lng: nextSegment[k].lng()}); \n              }\n            }\n          }\n          setPath(() => [{\n            path: coordinates,\n            directionInfo: result\n          }]);\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n      })\n    }\n    \n    const [currentfips, setCurrentFips] = React.useState([]);\n    const [clickedfips, setClickedFips] = React.useState([]);\n    const [originfips, setOriginFips] = React.useState([]);\n    const [destinationfips, setDestinationFips] = React.useState([]);\n    const [markers, setMarkers] = React.useState([]);\n    const [selected, setSelected] = React.useState([null]);\n    const [origin, setOrigin] = React.useState([]);\n    const [destination, setDestination] = React.useState([]);\n    const [path, setPath] = React.useState([]);\n\n    //error handling for path coordinates\n    const [infoWindowVisible, setInfoWindowVisible] = React.useState(false);\n    if(loadError) return \"Error loading maps\";\n    if(!isLoaded) return \"Loading Mpas\";\n    console.log(\"199 MAP.js DestinationFIPS\", destinationfips)\n    return (\n        <div className=\"map-container\">\n          <div className=\"map\">\n            <GoogleMap \n              mapContainerStyle={mapContainerStyle} \n              zoom={8} center={center} \n              options={options} \n              onClick={onMapClick} \n              onLoad={onMapLoad}\n            >\n              <button className=\"open-search\" onClick={openLeftNav}>&gt;</button>\n              <Locate panTo={panTo} onLocate={onLocate} />\n              {/* <SearchOrigin panTo={panTo} selectOrigin={selectOrigin}  />\n              <SearchDestination panTo={panTo} selectDestination={selectDestination} />\n              <button className=\"direction-button\" onClick={origin && destination ? applyAddress : null} >\n                Direction\n              </button> */}\n              <div id=\"left-nav\" className=\"left-nav\">\n                <SearchDestination panTo={panTo} selectDestination={selectDestination} />\n                <button className=\"direction-button\" onClick={origin && destination ? applyAddress : null} >\n                  Search\n                </button>\n              </div>\n              <button className=\"closebtn\" onClick={closeLeftNav}>&lt;</button>\n              {markers.map((marker) => (\n                <Marker \n                  key={marker.time.toISOString()} \n                  position={{lat: marker.lat, lng: marker.lng}}\n                  icon={{\n                    url:\"https://static.thenounproject.com/png/113403-200.png\",\n                    scaledSize: new window.google.maps.Size(50,50),\n                    origin: new window.google.maps.Point(0,0),\n                    anchor: new window.google.maps.Point(25,25),\n                  }}\n                  onClick={() => {\n                    setSelected(marker)\n                    setInfoWindowVisible(!infoWindowVisible)\n                  }}\n                >\n                </Marker>\n              ))}\n              {origin.map((marker) => (\n                <Marker \n                  key={marker.time.toISOString()} \n                  position={{lat: marker.lat, lng: marker.lng}}\n                  icon={{\n                    url:\"https://static.thenounproject.com/png/113403-200.png\",\n                    scaledSize: new window.google.maps.Size(50,50),\n                    origin: new window.google.maps.Point(0,0),\n                    anchor: new window.google.maps.Point(25,25),\n                  }}\n                  onClick={() => {\n                    setSelected(marker)\n                    setInfoWindowVisible(!infoWindowVisible)\n                  }}\n                >\n                </Marker>\n              ))}\n              {destination.map((marker) => (\n                <Marker \n                  key={marker.time.toISOString()} \n                  position={{lat: marker.lat, lng: marker.lng}}\n                  icon={{\n                    url:\"https://static.thenounproject.com/png/113403-200.png\",\n                    scaledSize: new window.google.maps.Size(50,50),\n                    origin: new window.google.maps.Point(0,0),\n                    anchor: new window.google.maps.Point(25,25),\n                  }}\n                  onClick={() => {\n                    setSelected(marker)\n                    setInfoWindowVisible(!infoWindowVisible)\n                  }}\n                >\n                </Marker>\n              ))}\n              {infoWindowVisible && (\n                <InfoWindow position={{lat: selected.lat, lng: selected.lng}}>\n                  <div>\n                    <h2>Selected!</h2>\n                    <p>Address: {selected.address}</p>\n                    <p>Latitude: {selected.lat} Longitude:{selected.lng}</p>\n                  </div>\n                </InfoWindow>\n              )}\n                 {destinationfips.length > 0 && path.length > 0 ? <DirectionsRenderer directions={path[0].directionInfo} panel={ document.getElementById('panel') } /> : null}\n            </GoogleMap>\n            {destinationfips.length > 0 && path.length > 0 ? <Tripinfo direction={path[0].directionInfo} token={props.token} destinationfips={destinationfips} /> : null}\n          </div>\n          {destinationfips.length > 0 && path.length > 0 ? <Tripinfo direction={path[0].directionInfo} token={props.token} destinationfips={destinationfips} /> : null}\n          {destinationfips.length > 0 && path.length > 0 ? <button className=\"show-direction\" onClick={openRightNav} >Show Direction</button> : null }\n          <div id=\"mySidenav\" className=\"sidenav\">\n            <a className=\"closebtn\" onClick={closeRightNav}>&times;</a>\n            <div id=\"panel\"></div>\n          </div>\n        </div>\n    );\n}\n\nexport default Map;\n\nfunction Locate({ panTo, onLocate }) {\n  return (\n    <button className=\"locate\" onClick={() => {\n      navigator.geolocation.getCurrentPosition((position) => {\n        panTo({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        });\n        onLocate(position)\n      }, \n      () => null);\n    }}>\n      <h1 className=\"compass\">\n        <span role=\"img\" aria-label=\"compass\">🧭</span>\n      </h1>\n    </button>\n  )\n}\n\nfunction SearchOrigin({ panTo, selectOrigin }) {\n\n  const {\n    value, \n    suggestions:{status, data}, \n    setValue, \n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: {lat: () => 40.7128, lng: () => -74.0060},\n      radius: 200 * 1000\n    }\n  })\n\n  return (\n      <div className=\"search-bar1\">\n        <Combobox \n          onSelect={async (address) => {\n            setValue(address, false);\n            clearSuggestions()\n            try {\n              const results = await getGeocode({address});\n              const { lat, lng } = await getLatLng(results[0]);\n              panTo({ lat, lng });\n              {selectOrigin({ lat, lng }, address)}\n            } catch(error){\n              console.log(\"Error!\")\n            }\n          }}\n        >\n          <ComboboxInput \n            value={value} \n            onChange={(e) => {\n              setValue(e.target.value)\n            }}\n            placeholder=\"Enter a start address\"\n          />\n          <ComboboxPopover>\n            <ComboboxList>\n              {status === \"OK\" && \n                data.map(({place_id, description}) => (\n                  <ComboboxOption key={place_id} value={description}/>\n                ))}\n            </ComboboxList>\n          </ComboboxPopover>\n        </Combobox>\n      </div>\n  )\n}\n\nfunction SearchDestination({ panTo, selectDestination }) {\n\n  const {\n    value, \n    suggestions:{status, data}, \n    setValue, \n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: {lat: () => 40.7128, lng: () => -74.0060},\n      radius: 200 * 1000\n    }\n  })\n\n  return (\n      <div className=\"search-bar2\">\n        <Combobox \n          onSelect={async (address) => {\n            setValue(address, false);\n            clearSuggestions()\n            try {\n              const results = await getGeocode({address});\n              const { lat, lng } = await getLatLng(results[0]);\n              panTo({ lat, lng });\n              {selectDestination({ lat, lng }, address)}\n            } catch(error){\n              console.log(\"Error!\")\n            }\n          }}\n        >\n          <ComboboxInput \n            value={value} \n            onChange={(e) => {\n              setValue(e.target.value)\n            }}\n            placeholder=\"Enter a destination address\"\n          />\n          <ComboboxPopover>\n            <ComboboxList>\n              {status === \"OK\" && \n                data.map(({place_id, description}) => (\n                  <ComboboxOption key={place_id} value={description}/>\n                ))}\n            </ComboboxList>\n          </ComboboxPopover>\n        </Combobox>\n      </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}