{"ast":null,"code":"var _jsxFileName = \"/Users/dukhyunko/Development/Covid-Travel/Covid-Travel-Risk-Assessment-Tool-frontend/src/components/Map.js\";\nimport React from \"react\";\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from \"use-places-autocomplete\";\nimport { Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption } from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\nimport mapStyles from './MapStyle';\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"80%\"\n};\nconst center = {\n  lat: 40.7128,\n  lng: -74.0060\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n  streetViewControl: true\n};\n\nfunction Map() {\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_KEY,\n    libraries\n  });\n\n  const changeAddressFormat = () => {\n    let startingPoint = `${origin[0].lat}, ${origin[0].lng}`;\n    let Endpoint = `${departure[0].lat}, ${departure[0].lng}`;\n    getDirection(startingPoint, Endpoint);\n  }; //mode input can be driving(default), walking bicycling &mode=driving\n\n\n  const getDirection = (startingPoint, Endpoint) => {\n    const url = `https://maps.googleapis.com/maps/api/directions/json?origin=${startingPoint}&destination=${Endpoint}&key=${process.env.REACT_APP_GOOGLE_KEY}`;\n    let proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n    fetch(proxyUrl + url).then(response => response.json()).then(data => {\n      collectPath.log(data.routes[0].legs[0].steps);\n    });\n  };\n\n  const collectPath = routeArray => {\n    let collectedArray = [];\n\n    for (let i = 0; i < routeArray.length; i++) {\n      let eachPoint = [];\n      eachPoint.push(routeArray[i].start_location.lat, routeArray[i].start_location.lng);\n      collectedArray.push(eachPoint);\n    }\n\n    setPath(() => [{\n      path: collectedArray.join(\"|\")\n    }], []);\n  };\n\n  const snapToRoad = () => {\n    const url = `https://roads.googleapis.com/v1/snapToRoads?path=${path}&interpolate=true&key=${process.env.REACT_APP_GOOGLE_KEY}`;\n    fetch(url).then(response => response.json()).then(data => console.log(data));\n  };\n\n  const getFips = React.useCallback((lat, lng) => {\n    const url = `https://geo.fcc.gov/api/census/area?lat=${lat}&lon=${lng}&format=json`;\n    fetch(url).then(response => response.json()).then(data => {\n      setFips(() => [{\n        fips: data.results[0].county_fips,\n        county_name: data.results[0].county_name\n      }]);\n    });\n  }, []);\n  const onMapClick = React.useCallback(event => {\n    getFips(event.latLng.lat(), event.latLng.lng());\n    const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${event.latLng.lat()},${event.latLng.lng()}&key=${process.env.REACT_APP_GOOGLE_KEY}`;\n    fetch(url).then(response => response.json()).then(data => {\n      setMarkers(() => [{\n        address: data.results[0].formatted_address,\n        lat: event.latLng.lat(),\n        lng: event.latLng.lng(),\n        time: new Date()\n      }]);\n    });\n  }, []);\n  const onLocate = React.useCallback(position => {\n    getFips(position.coords.latitude, position.coords.longitude);\n    const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${position.coords.latitude},${position.coords.longitude}&key=${process.env.REACT_APP_GOOGLE_KEY}`;\n    fetch(url).then(response => response.json()).then(data => {\n      setMarkers(() => [{\n        address: data.results[0].formatted_address,\n        lat: position.coords.latitude,\n        lng: position.coords.longitude,\n        time: new Date()\n      }]);\n    });\n  }, []);\n  const selectOrigin = React.useCallback((grid, address) => {\n    setOrigin(() => [{\n      address: address,\n      lat: grid.lat,\n      lng: grid.lng,\n      time: new Date()\n    }]);\n  }, []);\n  const selectDeparture = React.useCallback((grid, address) => {\n    setDeparture(() => [{\n      address: address,\n      lat: grid.lat,\n      lng: grid.lng,\n      time: new Date()\n    }]);\n  }, []);\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback(map => {\n    mapRef.current = map;\n  }, []);\n  const panTo = React.useCallback(({\n    lat,\n    lng\n  }) => {\n    mapRef.current.panTo({\n      lat,\n      lng\n    });\n    mapRef.current.setZoom(15);\n  }, []);\n  const [fips, setFips] = React.useState([]);\n  const [markers, setMarkers] = React.useState([]);\n  const [selected, setSelected] = React.useState([null]);\n  const [path, setPath] = React.useState([]);\n  const [origin, setOrigin] = React.useState([]);\n  const [departure, setDeparture] = React.useState([]);\n  const [infoWindowVisible, setInfoWindowVisible] = React.useState(false);\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"Loading Mpas\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"map-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, \"Covid Hater\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"virus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, \"\\uD83E\\uDDA0\")), /*#__PURE__*/React.createElement(Locate, {\n    panTo: panTo,\n    onLocate: onLocate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(SearchOrigin, {\n    panTo: panTo,\n    selectOrigin: selectOrigin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(SearchDeparture, {\n    panTo: panTo,\n    selectDeparture: selectDeparture,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"direction-button\",\n    onClick: origin && departure ? changeAddressFormat : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, \"Direction\"), /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: mapContainerStyle,\n    zoom: 8,\n    center: center,\n    options: options,\n    onClick: onMapClick,\n    onLoad: onMapLoad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, markers.map(marker => /*#__PURE__*/React.createElement(Marker, {\n    key: marker.time.toISOString(),\n    position: {\n      lat: marker.lat,\n      lng: marker.lng\n    },\n    icon: {\n      url: \"https://static.thenounproject.com/png/113403-200.png\",\n      scaledSize: new window.google.maps.Size(50, 50),\n      origin: new window.google.maps.Point(0, 0),\n      anchor: new window.google.maps.Point(25, 25)\n    },\n    onClick: () => {\n      setSelected(marker);\n      setInfoWindowVisible(!infoWindowVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  })), origin.map(marker => /*#__PURE__*/React.createElement(Marker, {\n    key: marker.time.toISOString(),\n    position: {\n      lat: marker.lat,\n      lng: marker.lng\n    },\n    icon: {\n      url: \"https://static.thenounproject.com/png/113403-200.png\",\n      scaledSize: new window.google.maps.Size(50, 50),\n      origin: new window.google.maps.Point(0, 0),\n      anchor: new window.google.maps.Point(25, 25)\n    },\n    onClick: () => {\n      setSelected(marker);\n      setInfoWindowVisible(!infoWindowVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  })), departure.map(marker => /*#__PURE__*/React.createElement(Marker, {\n    key: marker.time.toISOString(),\n    position: {\n      lat: marker.lat,\n      lng: marker.lng\n    },\n    icon: {\n      url: \"https://static.thenounproject.com/png/113403-200.png\",\n      scaledSize: new window.google.maps.Size(50, 50),\n      origin: new window.google.maps.Point(0, 0),\n      anchor: new window.google.maps.Point(25, 25)\n    },\n    onClick: () => {\n      setSelected(marker);\n      setInfoWindowVisible(!infoWindowVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  })), infoWindowVisible && /*#__PURE__*/React.createElement(InfoWindow, {\n    position: {\n      lat: selected.lat,\n      lng: selected.lng\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 19\n    }\n  }, \"Selected!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 19\n    }\n  }, \"Address: \", selected.address), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 19\n    }\n  }, \"Latitude: \", selected.lat, \" Longitude:\", selected.lng))))));\n}\n\nexport default Map;\n\nfunction Locate({\n  panTo,\n  onLocate\n}) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"locate\",\n    onClick: () => {\n      navigator.geolocation.getCurrentPosition(position => {\n        panTo({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n        onLocate(position);\n      }, () => null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"compass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"compass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }\n  }, \"\\uD83E\\uDDED \")));\n}\n\nfunction SearchOrigin({\n  panTo,\n  selectOrigin\n}) {\n  const {\n    value,\n    suggestions: {\n      status,\n      data\n    },\n    setValue,\n    clearSuggestions\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: {\n        lat: () => 40.7128,\n        lng: () => -74.0060\n      },\n      radius: 200 * 1000\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-bar1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Combobox, {\n    onSelect: async address => {\n      setValue(address, false);\n      clearSuggestions();\n\n      try {\n        const results = await getGeocode({\n          address\n        });\n        const {\n          lat,\n          lng\n        } = await getLatLng(results[0]);\n        panTo({\n          lat,\n          lng\n        });\n        {\n          selectOrigin({\n            lat,\n            lng\n          }, address);\n        }\n      } catch (error) {\n        console.log(\"Error!\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxInput, {\n    value: value,\n    onChange: e => {\n      setValue(e.target.value);\n    },\n    placeholder: \"Enter a address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ComboboxPopover, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  }, status === \"OK\" && data.map(({\n    place_id,\n    description\n  }) => /*#__PURE__*/React.createElement(ComboboxOption, {\n    key: place_id,\n    value: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 19\n    }\n  }))))));\n}\n\nfunction SearchDeparture({\n  panTo,\n  selectDeparture\n}) {\n  const {\n    value,\n    suggestions: {\n      status,\n      data\n    },\n    setValue,\n    clearSuggestions\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: {\n        lat: () => 40.7128,\n        lng: () => -74.0060\n      },\n      radius: 200 * 1000\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-bar2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Combobox, {\n    onSelect: async address => {\n      setValue(address, false);\n      clearSuggestions();\n\n      try {\n        const results = await getGeocode({\n          address\n        });\n        const {\n          lat,\n          lng\n        } = await getLatLng(results[0]);\n        panTo({\n          lat,\n          lng\n        });\n        {\n          selectDeparture({\n            lat,\n            lng\n          }, address);\n        }\n      } catch (error) {\n        console.log(\"Error!\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxInput, {\n    value: value,\n    onChange: e => {\n      setValue(e.target.value);\n    },\n    placeholder: \"Enter a address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ComboboxPopover, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 13\n    }\n  }, status === \"OK\" && data.map(({\n    place_id,\n    description\n  }) => /*#__PURE__*/React.createElement(ComboboxOption, {\n    key: place_id,\n    value: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 19\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/dukhyunko/Development/Covid-Travel/Covid-Travel-Risk-Assessment-Tool-frontend/src/components/Map.js"],"names":["React","GoogleMap","useLoadScript","Marker","InfoWindow","usePlacesAutocomplete","getGeocode","getLatLng","Combobox","ComboboxInput","ComboboxPopover","ComboboxList","ComboboxOption","mapStyles","libraries","mapContainerStyle","width","height","center","lat","lng","options","styles","disableDefaultUI","zoomControl","streetViewControl","Map","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_KEY","changeAddressFormat","startingPoint","origin","Endpoint","departure","getDirection","url","proxyUrl","fetch","then","response","json","data","collectPath","log","routes","legs","steps","routeArray","collectedArray","i","length","eachPoint","push","start_location","setPath","path","join","snapToRoad","console","getFips","useCallback","setFips","fips","results","county_fips","county_name","onMapClick","event","latLng","setMarkers","address","formatted_address","time","Date","onLocate","position","coords","latitude","longitude","selectOrigin","grid","setOrigin","selectDeparture","setDeparture","mapRef","useRef","onMapLoad","map","current","panTo","setZoom","useState","markers","selected","setSelected","infoWindowVisible","setInfoWindowVisible","marker","toISOString","scaledSize","window","google","maps","Size","Point","anchor","Locate","navigator","geolocation","getCurrentPosition","SearchOrigin","value","suggestions","status","setValue","clearSuggestions","requestOptions","location","radius","error","e","target","place_id","description","SearchDeparture"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {GoogleMap, useLoadScript, Marker, InfoWindow} from \"@react-google-maps/api\";\nimport usePlacesAutocomplete, {getGeocode, getLatLng} from \"use-places-autocomplete\";\nimport {Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption} from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\nimport mapStyles from './MapStyle';\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"80%\",\n}\n\nconst center = {\n  lat: 40.7128,\n  lng: -74.0060,\n}\n\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n  streetViewControl: true,\n}\n \nfunction Map() {\n\n    const {isLoaded, loadError} = useLoadScript({\n      googleMapsApiKey: process.env.REACT_APP_GOOGLE_KEY,\n      libraries,\n    });\n\n    const changeAddressFormat = () => {\n      let startingPoint = `${origin[0].lat}, ${origin[0].lng}`\n      let Endpoint = `${departure[0].lat}, ${departure[0].lng}`\n      getDirection(startingPoint, Endpoint)\n    }\n\n    //mode input can be driving(default), walking bicycling &mode=driving\n\n    const getDirection = (startingPoint, Endpoint) => {\n      const url = `https://maps.googleapis.com/maps/api/directions/json?origin=${startingPoint}&destination=${Endpoint}&key=${process.env.REACT_APP_GOOGLE_KEY}`\n      let proxyUrl = 'https://cors-anywhere.herokuapp.com/'\n      fetch(proxyUrl + url)\n      .then(response => response.json())\n      .then(data => {\n        collectPath.log(data.routes[0].legs[0].steps)\n      })\n    }\n\n    const collectPath = (routeArray) => {\n      let collectedArray = []\n      for ( let i = 0; i < routeArray.length; i++ ){\n        let eachPoint = []\n        eachPoint.push(routeArray[i].start_location.lat, routeArray[i].start_location.lng)\n        collectedArray.push(eachPoint)\n      }\n      setPath(() => [{ \n        path: collectedArray.join(\"|\")\n      }], []);\n    }\n\n    const snapToRoad = () => {\n      const url = `https://roads.googleapis.com/v1/snapToRoads?path=${path}&interpolate=true&key=${process.env.REACT_APP_GOOGLE_KEY}`\n      fetch(url)\n      .then(response => response.json())\n      .then(data => console.log(data))\n    }\n\n    const getFips = React.useCallback((lat, lng) => {\n      const url = `https://geo.fcc.gov/api/census/area?lat=${lat}&lon=${lng}&format=json`\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          setFips(() => [{\n            fips: data.results[0].county_fips,\n            county_name: data.results[0].county_name,\n          }]);\n      })\n    }, []);\n\n    const onMapClick = React.useCallback((event) => {\n      getFips(event.latLng.lat(), event.latLng.lng())\n      const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${event.latLng.lat()},${event.latLng.lng()}&key=${process.env.REACT_APP_GOOGLE_KEY}`;\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          setMarkers(() => [\n            { \n              address: data.results[0].formatted_address,\n              lat: event.latLng.lat(),\n              lng: event.latLng.lng(),\n              time: new Date()\n          }]);\n      })\n    }, []);\n\n    const onLocate = React.useCallback((position) => {\n      getFips(position.coords.latitude, position.coords.longitude)\n      const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${position.coords.latitude},${position.coords.longitude}&key=${process.env.REACT_APP_GOOGLE_KEY}`;\n      fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        setMarkers(() => [{ \n          address: data.results[0].formatted_address,\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n          time: new Date()\n        }]);\n      })\n    }, []);\n\n    const selectOrigin = React.useCallback((grid, address) => {\n      setOrigin(() => [{\n        address: address,\n        lat: grid.lat,\n        lng: grid.lng,\n        time: new Date()\n      }]);\n    }, []);\n\n    const selectDeparture = React.useCallback((grid, address) => {\n      setDeparture(() => [{\n        address: address,\n        lat: grid.lat,\n        lng: grid.lng,\n        time: new Date()\n      }]);\n    }, []);\n    \n    const mapRef = React.useRef();\n    const onMapLoad = React.useCallback((map) => {\n      mapRef.current = map;\n    }, []);\n\n    const panTo = React.useCallback(({lat,lng}) => {\n      mapRef.current.panTo({lat,lng});\n      mapRef.current.setZoom(15);\n    }, []);\n\n    const [fips, setFips] = React.useState([]);\n    const [markers, setMarkers] = React.useState([]);\n    const [selected, setSelected] = React.useState([null]);\n    const [path, setPath] = React.useState([]);\n    const [origin, setOrigin] = React.useState([]);\n    const [departure, setDeparture] = React.useState([]);\n\n    const [infoWindowVisible, setInfoWindowVisible] = React.useState(false);\n\n    if(loadError) return \"Error loading maps\";\n    if(!isLoaded) return \"Loading Mpas\";\n\n    return (\n      <div className=\"map-container\">\n        <div className=\"map\">\n          <h1 id=\"map-logo\">\n            Covid Hater{\" \"}\n            <span role=\"img\" aria-label=\"virus\">🦠</span>\n          </h1>\n          <Locate panTo={panTo} onLocate={onLocate} />\n          <SearchOrigin panTo={panTo} selectOrigin={selectOrigin}  />\n          <SearchDeparture panTo={panTo} selectDeparture={selectDeparture} />\n          <button className=\"direction-button\" onClick={origin && departure ? changeAddressFormat : null} >\n            Direction\n          </button>\n          <GoogleMap \n            mapContainerStyle={mapContainerStyle} \n            zoom={8} center={center} \n            options={options} \n            onClick={onMapClick} \n            onLoad={onMapLoad}\n          >\n            {markers.map((marker) => (\n              <Marker \n                key={marker.time.toISOString()} \n                position={{lat: marker.lat, lng: marker.lng}}\n                icon={{\n                  url:\"https://static.thenounproject.com/png/113403-200.png\",\n                  scaledSize: new window.google.maps.Size(50,50),\n                  origin: new window.google.maps.Point(0,0),\n                  anchor: new window.google.maps.Point(25,25),\n                }}\n                onClick={() => {\n                  setSelected(marker)\n                  setInfoWindowVisible(!infoWindowVisible)\n                }}\n              >\n              </Marker>\n            ))}\n            {origin.map((marker) => (\n              <Marker \n                key={marker.time.toISOString()} \n                position={{lat: marker.lat, lng: marker.lng}}\n                icon={{\n                  url:\"https://static.thenounproject.com/png/113403-200.png\",\n                  scaledSize: new window.google.maps.Size(50,50),\n                  origin: new window.google.maps.Point(0,0),\n                  anchor: new window.google.maps.Point(25,25),\n                }}\n                onClick={() => {\n                  setSelected(marker)\n                  setInfoWindowVisible(!infoWindowVisible)\n                }}\n              >\n              </Marker>\n            ))}\n            {departure.map((marker) => (\n              <Marker \n                key={marker.time.toISOString()} \n                position={{lat: marker.lat, lng: marker.lng}}\n                icon={{\n                  url:\"https://static.thenounproject.com/png/113403-200.png\",\n                  scaledSize: new window.google.maps.Size(50,50),\n                  origin: new window.google.maps.Point(0,0),\n                  anchor: new window.google.maps.Point(25,25),\n                }}\n                onClick={() => {\n                  setSelected(marker)\n                  setInfoWindowVisible(!infoWindowVisible)\n                }}\n              >\n              </Marker>\n            ))}\n\n            {infoWindowVisible && (\n              <InfoWindow position={{lat: selected.lat, lng: selected.lng}}>\n                <div>\n                  <h2>Selected!</h2>\n                  <p>Address: {selected.address}</p>\n                  <p>Latitude: {selected.lat} Longitude:{selected.lng}</p>\n                </div>\n              </InfoWindow>\n            )}\n          </GoogleMap>\n        </div>\n      </div>\n    );\n}\n\nexport default Map;\n\nfunction Locate({ panTo, onLocate }) {\n  return (\n    <button className=\"locate\" onClick={() => {\n      navigator.geolocation.getCurrentPosition((position) => {\n        panTo({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        });\n        onLocate(position)\n      }, \n      () => null);\n    }}>\n      <h1 className=\"compass\">\n        <span role=\"img\" aria-label=\"compass\">🧭 </span>\n      </h1>\n    </button>\n  )\n}\n\nfunction SearchOrigin({ panTo, selectOrigin }) {\n\n  const {\n    value, \n    suggestions:{status, data}, \n    setValue, \n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: {lat: () => 40.7128, lng: () => -74.0060},\n      radius: 200 * 1000\n    }\n  })\n\n  return (\n      <div className=\"search-bar1\">\n        <Combobox \n          onSelect={async (address) => {\n            setValue(address, false);\n            clearSuggestions()\n            try {\n              const results = await getGeocode({address});\n              const { lat, lng } = await getLatLng(results[0]);\n              panTo({ lat, lng });\n              {selectOrigin({ lat, lng }, address)}\n            } catch(error){\n              console.log(\"Error!\")\n            }\n          }}\n        >\n          <ComboboxInput \n            value={value} \n            onChange={(e) => {\n              setValue(e.target.value)\n            }}\n            placeholder=\"Enter a address\"\n          />\n          <ComboboxPopover>\n            <ComboboxList>\n              {status === \"OK\" && \n                data.map(({place_id, description}) => (\n                  <ComboboxOption key={place_id} value={description}/>\n                ))}\n            </ComboboxList>\n          </ComboboxPopover>\n        </Combobox>\n      </div>\n  )\n}\n\nfunction SearchDeparture({ panTo, selectDeparture }) {\n\n  const {\n    value, \n    suggestions:{status, data}, \n    setValue, \n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: {lat: () => 40.7128, lng: () => -74.0060},\n      radius: 200 * 1000\n    }\n  })\n\n  return (\n      <div className=\"search-bar2\">\n        <Combobox \n          onSelect={async (address) => {\n            setValue(address, false);\n            clearSuggestions()\n            try {\n              const results = await getGeocode({address});\n              const { lat, lng } = await getLatLng(results[0]);\n              panTo({ lat, lng });\n              {selectDeparture({ lat, lng }, address)}\n            } catch(error){\n              console.log(\"Error!\")\n            }\n          }}\n        >\n          <ComboboxInput \n            value={value} \n            onChange={(e) => {\n              setValue(e.target.value)\n            }}\n            placeholder=\"Enter a address\"\n          />\n          <ComboboxPopover>\n            <ComboboxList>\n              {status === \"OK\" && \n                data.map(({place_id, description}) => (\n                  <ComboboxOption key={place_id} value={description}/>\n                ))}\n            </ComboboxList>\n          </ComboboxPopover>\n        </Combobox>\n      </div>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}