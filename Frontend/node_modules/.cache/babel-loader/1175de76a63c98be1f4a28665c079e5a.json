{"ast":null,"code":"var _jsxFileName = \"/Users/dukhyunko/Development/Covid-Travel/Covid-Travel-Risk-Assessment-Tool-frontend/src/components/Map.js\";\nimport React from \"react\";\nimport { GoogleMap, useLoadScript, Marker, InfoWindow, Polyline } from \"@react-google-maps/api\";\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from \"use-places-autocomplete\";\nimport { Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption } from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\nimport mapStyles from './MapStyle';\nconst libraries = [\"places\"];\nlet polylines = [];\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"80%\"\n};\nconst center = {\n  lat: 40.7128,\n  lng: -74.0060\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n  streetViewControl: true\n};\n\nfunction Map() {\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_KEY,\n    libraries\n  });\n\n  const changeAddressFormat = () => {\n    getDirection(origin, destination);\n    getOriginFips(`${origin[0].lat}`, `${origin[0].lng}`);\n    getDestinationFips(`${destination[0].lat}`, `${destination[0].lng}`);\n  }; //mode input can be driving(default), walking bicycling &mode=driving\n\n\n  const getDirection = (origin, destination) => {\n    const DirectionsService = new window.google.maps.DirectionsService();\n    DirectionsService.route({\n      origin: new window.google.maps.LatLng(origin[0].lat, origin[0].lng),\n      destination: new window.google.maps.LatLng(destination[0].lat, destination[0].lng),\n      travelMode: window.google.maps.TravelMode.DRIVING\n    }, (result, status) => {\n      if (status === window.google.maps.DirectionsStatus.OK) {\n        let coodinates = [];\n        let legs = result.routes[0].legs;\n\n        for (let i = 0; i < legs.length; i++) {\n          let steps = legs[i].steps;\n\n          for (let j = 0; j < steps.length; j++) {\n            let nextSegment = steps[j].path;\n\n            for (let k = 0; k < nextSegment.length; k++) {\n              coodinates.push({\n                lat: nextSegment[k].lat(),\n                lng: nextSegment[k].lng()\n              });\n            }\n          }\n        }\n\n        console.log(coodinates);\n        setPath(() => [{\n          pathCoordinates: coodinates\n        }]);\n      } else {\n        console.error(`error fetching directions ${result}`);\n      }\n    });\n  };\n\n  const getClickedFips = React.useCallback((lat, lng) => {\n    const url = `https://geo.fcc.gov/api/census/area?lat=${lat}&lon=${lng}&format=json`;\n    fetch(url).then(response => response.json()).then(data => {\n      setClickedFips(() => [{\n        fips: data.results[0].county_fips,\n        county_name: data.results[0].county_name\n      }]);\n    });\n  }, []);\n  const getCurrentFips = React.useCallback((lat, lng) => {\n    const url = `https://geo.fcc.gov/api/census/area?lat=${lat}&lon=${lng}&format=json`;\n    fetch(url).then(response => response.json()).then(data => {\n      setCurrentFips(() => [{\n        fips: data.results[0].county_fips,\n        county_name: data.results[0].county_name\n      }]);\n    });\n  }, []);\n  const getOriginFips = React.useCallback((lat, lng) => {\n    const url = `https://geo.fcc.gov/api/census/area?lat=${lat}&lon=${lng}&format=json`;\n    fetch(url).then(response => response.json()).then(data => {\n      setOriginFips(() => [{\n        fips: data.results[0].county_fips,\n        county_name: data.results[0].county_name\n      }]);\n    });\n  }, []);\n  const getDestinationFips = React.useCallback((lat, lng) => {\n    const url = `https://geo.fcc.gov/api/census/area?lat=${lat}&lon=${lng}&format=json`;\n    fetch(url).then(response => response.json()).then(data => {\n      setDestinationFips(() => [{\n        fips: data.results[0].county_fips,\n        county_name: data.results[0].county_name\n      }]);\n    });\n  }, []);\n  const onMapClick = React.useCallback(event => {\n    getClickedFips(event.latLng.lat(), event.latLng.lng());\n    const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${event.latLng.lat()},${event.latLng.lng()}&key=${process.env.REACT_APP_GOOGLE_KEY}`;\n    fetch(url).then(response => response.json()).then(data => {\n      setMarkers(() => [{\n        address: data.results[0].formatted_address,\n        lat: event.latLng.lat(),\n        lng: event.latLng.lng(),\n        time: new Date()\n      }]);\n    });\n  }, []);\n  const onLocate = React.useCallback(position => {\n    getCurrentFips(position.coords.latitude, position.coords.longitude);\n    const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${position.coords.latitude},${position.coords.longitude}&key=${process.env.REACT_APP_GOOGLE_KEY}`;\n    fetch(url).then(response => response.json()).then(data => {\n      setMarkers(() => [{\n        address: data.results[0].formatted_address,\n        lat: position.coords.latitude,\n        lng: position.coords.longitude,\n        time: new Date()\n      }]);\n    });\n  }, []);\n  const selectOrigin = React.useCallback((grid, address) => {\n    setOrigin(() => [{\n      address: address,\n      lat: grid.lat,\n      lng: grid.lng,\n      time: new Date()\n    }]);\n  }, []);\n  const selectDestination = React.useCallback((grid, address) => {\n    setDestination(() => [{\n      address: address,\n      lat: grid.lat,\n      lng: grid.lng,\n      time: new Date()\n    }]);\n  }, []);\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback(map => {\n    mapRef.current = map;\n  }, []);\n  const panTo = React.useCallback(({\n    lat,\n    lng\n  }) => {\n    mapRef.current.panTo({\n      lat,\n      lng\n    });\n    mapRef.current.setZoom(15);\n  }, []);\n  const [currentfips, setCurrentFips] = React.useState([]);\n  const [clickedfips, setClickedFips] = React.useState([]);\n  const [originfips, setOriginFips] = React.useState([]);\n  const [destinationfips, setDestinationFips] = React.useState([]);\n  const [markers, setMarkers] = React.useState([]);\n  const [selected, setSelected] = React.useState([null]);\n  const [origin, setOrigin] = React.useState([]);\n  const [destination, setDestination] = React.useState([]);\n  const [pathCoordinates, setPath] = React.useState([]);\n  const [infoWindowVisible, setInfoWindowVisible] = React.useState(false);\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"Loading Mpas\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"map-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, \"Covid Hater\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"virus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, \"\\uD83E\\uDDA0\")), /*#__PURE__*/React.createElement(Locate, {\n    panTo: panTo,\n    onLocate: onLocate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(SearchOrigin, {\n    panTo: panTo,\n    selectOrigin: selectOrigin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(SearchDestination, {\n    panTo: panTo,\n    selectDestination: selectDestination,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"direction-button\",\n    onClick: origin && destination ? changeAddressFormat : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, \"Direction\"), /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: mapContainerStyle,\n    zoom: 8,\n    center: center,\n    options: options,\n    onClick: onMapClick,\n    onLoad: onMapLoad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, markers.map(marker => /*#__PURE__*/React.createElement(Marker, {\n    key: marker.time.toISOString(),\n    position: {\n      lat: marker.lat,\n      lng: marker.lng\n    },\n    icon: {\n      url: \"https://static.thenounproject.com/png/113403-200.png\",\n      scaledSize: new window.google.maps.Size(50, 50),\n      origin: new window.google.maps.Point(0, 0),\n      anchor: new window.google.maps.Point(25, 25)\n    },\n    onClick: () => {\n      setSelected(marker);\n      setInfoWindowVisible(!infoWindowVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  })), origin.map(marker => /*#__PURE__*/React.createElement(Marker, {\n    key: marker.time.toISOString(),\n    position: {\n      lat: marker.lat,\n      lng: marker.lng\n    },\n    icon: {\n      url: \"https://static.thenounproject.com/png/113403-200.png\",\n      scaledSize: new window.google.maps.Size(50, 50),\n      origin: new window.google.maps.Point(0, 0),\n      anchor: new window.google.maps.Point(25, 25)\n    },\n    onClick: () => {\n      setSelected(marker);\n      setInfoWindowVisible(!infoWindowVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  })), destination.map(marker => /*#__PURE__*/React.createElement(Marker, {\n    key: marker.time.toISOString(),\n    position: {\n      lat: marker.lat,\n      lng: marker.lng\n    },\n    icon: {\n      url: \"https://static.thenounproject.com/png/113403-200.png\",\n      scaledSize: new window.google.maps.Size(50, 50),\n      origin: new window.google.maps.Point(0, 0),\n      anchor: new window.google.maps.Point(25, 25)\n    },\n    onClick: () => {\n      setSelected(marker);\n      setInfoWindowVisible(!infoWindowVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Polyline, {\n    path: [{\n      lat: 40.76633,\n      lng: -73.82249\n    }, {\n      lat: 40.76632,\n      lng: -73.82261000000001\n    }, {\n      lat: 40.7663,\n      lng: -73.82289\n    }, {\n      lat: 40.766290000000005,\n      lng: -73.82295\n    }, {\n      lat: 40.76628,\n      lng: -73.82297000000001\n    }, {\n      lat: 40.766290000000005,\n      lng: -73.82296000000001\n    }, {\n      lat: 40.76628,\n      lng: -73.82299\n    }, {\n      lat: 40.766270000000006,\n      lng: -73.82299\n    }, {\n      lat: 40.76626,\n      lng: -73.82300000000001\n    }, {\n      lat: 40.76625000000001,\n      lng: -73.82301000000001\n    }, {\n      lat: 40.76623,\n      lng: -73.82301000000001\n    }, {\n      lat: 40.76592,\n      lng: -73.82295\n    }, {\n      lat: 40.76592,\n      lng: -73.82295\n    }, {\n      lat: 40.766160000000006,\n      lng: -73.82098\n    }, {\n      lat: 40.76617,\n      lng: -73.82091000000001\n    }, {\n      lat: 40.76625000000001,\n      lng: -73.82023000000001\n    }, {\n      lat: 40.766310000000004,\n      lng: -73.81970000000001\n    }, {\n      lat: 40.766470000000005,\n      lng: -73.81839000000001\n    }, {\n      lat: 40.766470000000005,\n      lng: -73.81836000000001\n    }, {\n      lat: 40.76659,\n      lng: -73.81739\n    }, {\n      lat: 40.76659,\n      lng: -73.81739\n    }, {\n      lat: 40.766650000000006,\n      lng: -73.81739\n    }, {\n      lat: 40.766690000000004,\n      lng: -73.81739\n    }, {\n      lat: 40.767590000000006,\n      lng: -73.81737000000001\n    }, {\n      lat: 40.76769,\n      lng: -73.81738\n    }, {\n      lat: 40.769130000000004,\n      lng: -73.81735\n    }, {\n      lat: 40.769180000000006,\n      lng: -73.81735\n    }, {\n      lat: 40.770300000000006,\n      lng: -73.81732000000001\n    }, {\n      lat: 40.77037000000001,\n      lng: -73.81732000000001\n    }, {\n      lat: 40.771480000000004,\n      lng: -73.8173\n    }, {\n      lat: 40.77176,\n      lng: -73.81732000000001\n    }, {\n      lat: 40.77192,\n      lng: -73.81733000000001\n    }, {\n      lat: 40.77203,\n      lng: -73.81734\n    }, {\n      lat: 40.77208,\n      lng: -73.81734\n    }, {\n      lat: 40.77235,\n      lng: -73.81736000000001\n    }, {\n      lat: 40.77268,\n      lng: -73.81739\n    }, {\n      lat: 40.773070000000004,\n      lng: -73.81742000000001\n    }, {\n      lat: 40.77364,\n      lng: -73.81745000000001\n    }, {\n      lat: 40.773700000000005,\n      lng: -73.81745000000001\n    }, {\n      lat: 40.77378,\n      lng: -73.81746000000001\n    }, {\n      lat: 40.774440000000006,\n      lng: -73.81751000000001\n    }, {\n      lat: 40.774530000000006,\n      lng: -73.81751000000001\n    }, {\n      lat: 40.774620000000006,\n      lng: -73.81753\n    }, {\n      lat: 40.77528,\n      lng: -73.81757\n    }, {\n      lat: 40.775360000000006,\n      lng: -73.81758\n    }, {\n      lat: 40.775740000000006,\n      lng: -73.81762\n    }, {\n      lat: 40.7764,\n      lng: -73.81766\n    }, {\n      lat: 40.77647,\n      lng: -73.81764000000001\n    }, {\n      lat: 40.77671,\n      lng: -73.81761\n    }, {\n      lat: 40.77711,\n      lng: -73.81755000000001\n    }, {\n      lat: 40.77743,\n      lng: -73.81751000000001\n    }, {\n      lat: 40.77776,\n      lng: -73.81746000000001\n    }, {\n      lat: 40.77812,\n      lng: -73.81741000000001\n    }, {\n      lat: 40.77911,\n      lng: -73.81728000000001\n    }, {\n      lat: 40.78009,\n      lng: -73.81715000000001\n    }, {\n      lat: 40.780730000000005,\n      lng: -73.81706000000001\n    }, {\n      lat: 40.780800000000006,\n      lng: -73.81705000000001\n    }, {\n      lat: 40.7815,\n      lng: -73.81695\n    }, {\n      lat: 40.7815,\n      lng: -73.81695\n    }, {\n      lat: 40.78139,\n      lng: -73.81553000000001\n    }, {\n      lat: 40.78132,\n      lng: -73.81464000000001\n    }, {\n      lat: 40.781310000000005,\n      lng: -73.81453\n    }, {\n      lat: 40.7813,\n      lng: -73.81434\n    }, {\n      lat: 40.781290000000006,\n      lng: -73.81426\n    }, {\n      lat: 40.78128,\n      lng: -73.8142\n    }, {\n      lat: 40.78125,\n      lng: -73.81379000000001\n    }, {\n      lat: 40.781110000000005,\n      lng: -73.81211\n    }, {\n      lat: 40.7811,\n      lng: -73.81201\n    }, {\n      lat: 40.7811,\n      lng: -73.81190000000001\n    }, {\n      lat: 40.781060000000004,\n      lng: -73.81131\n    }, {\n      lat: 40.78105,\n      lng: -73.81117\n    }, {\n      lat: 40.78099,\n      lng: -73.81038000000001\n    }, {\n      lat: 40.78098000000001,\n      lng: -73.81022\n    }, {\n      lat: 40.78096,\n      lng: -73.80999\n    }, {\n      lat: 40.78094,\n      lng: -73.80976000000001\n    }, {\n      lat: 40.7809,\n      lng: -73.80928\n    }, {\n      lat: 40.780860000000004,\n      lng: -73.8088\n    }, {\n      lat: 40.780820000000006,\n      lng: -73.80835\n    }, {\n      lat: 40.780800000000006,\n      lng: -73.80812\n    }, {\n      lat: 40.78079,\n      lng: -73.80796000000001\n    }],\n    geodesic: true,\n    options: {\n      strokeColor: \"#ff2527\",\n      strokeOpacity: 0.75,\n      strokeWeight: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }), infoWindowVisible && /*#__PURE__*/React.createElement(InfoWindow, {\n    position: {\n      lat: selected.lat,\n      lng: selected.lng\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 19\n    }\n  }, \"Selected!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 19\n    }\n  }, \"Address: \", selected.address), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 19\n    }\n  }, \"Latitude: \", selected.lat, \" Longitude:\", selected.lng))))));\n}\n\nexport default Map;\n\nfunction Locate({\n  panTo,\n  onLocate\n}) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"locate\",\n    onClick: () => {\n      navigator.geolocation.getCurrentPosition(position => {\n        panTo({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n        onLocate(position);\n      }, () => null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"compass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"compass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 9\n    }\n  }, \"\\uD83E\\uDDED \")));\n}\n\nfunction SearchOrigin({\n  panTo,\n  selectOrigin\n}) {\n  const {\n    value,\n    suggestions: {\n      status,\n      data\n    },\n    setValue,\n    clearSuggestions\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: {\n        lat: () => 40.7128,\n        lng: () => -74.0060\n      },\n      radius: 200 * 1000\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-bar1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Combobox, {\n    onSelect: async address => {\n      setValue(address, false);\n      clearSuggestions();\n\n      try {\n        const results = await getGeocode({\n          address\n        });\n        const {\n          lat,\n          lng\n        } = await getLatLng(results[0]);\n        panTo({\n          lat,\n          lng\n        });\n        {\n          selectOrigin({\n            lat,\n            lng\n          }, address);\n        }\n      } catch (error) {\n        console.log(\"Error!\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxInput, {\n    value: value,\n    onChange: e => {\n      setValue(e.target.value);\n    },\n    placeholder: \"Enter a address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ComboboxPopover, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 13\n    }\n  }, status === \"OK\" && data.map(({\n    place_id,\n    description\n  }) => /*#__PURE__*/React.createElement(ComboboxOption, {\n    key: place_id,\n    value: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 19\n    }\n  }))))));\n}\n\nfunction SearchDestination({\n  panTo,\n  selectDestination\n}) {\n  const {\n    value,\n    suggestions: {\n      status,\n      data\n    },\n    setValue,\n    clearSuggestions\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: {\n        lat: () => 40.7128,\n        lng: () => -74.0060\n      },\n      radius: 200 * 1000\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-bar2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Combobox, {\n    onSelect: async address => {\n      setValue(address, false);\n      clearSuggestions();\n\n      try {\n        const results = await getGeocode({\n          address\n        });\n        const {\n          lat,\n          lng\n        } = await getLatLng(results[0]);\n        panTo({\n          lat,\n          lng\n        });\n        {\n          selectDestination({\n            lat,\n            lng\n          }, address);\n        }\n      } catch (error) {\n        console.log(\"Error!\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxInput, {\n    value: value,\n    onChange: e => {\n      setValue(e.target.value);\n    },\n    placeholder: \"Enter a address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ComboboxPopover, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 13\n    }\n  }, status === \"OK\" && data.map(({\n    place_id,\n    description\n  }) => /*#__PURE__*/React.createElement(ComboboxOption, {\n    key: place_id,\n    value: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 19\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/dukhyunko/Development/Covid-Travel/Covid-Travel-Risk-Assessment-Tool-frontend/src/components/Map.js"],"names":["React","GoogleMap","useLoadScript","Marker","InfoWindow","Polyline","usePlacesAutocomplete","getGeocode","getLatLng","Combobox","ComboboxInput","ComboboxPopover","ComboboxList","ComboboxOption","mapStyles","libraries","polylines","mapContainerStyle","width","height","center","lat","lng","options","styles","disableDefaultUI","zoomControl","streetViewControl","Map","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_KEY","changeAddressFormat","getDirection","origin","destination","getOriginFips","getDestinationFips","DirectionsService","window","google","maps","route","LatLng","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","coodinates","legs","routes","i","length","steps","j","nextSegment","path","k","push","console","log","setPath","pathCoordinates","error","getClickedFips","useCallback","url","fetch","then","response","json","data","setClickedFips","fips","results","county_fips","county_name","getCurrentFips","setCurrentFips","setOriginFips","setDestinationFips","onMapClick","event","latLng","setMarkers","address","formatted_address","time","Date","onLocate","position","coords","latitude","longitude","selectOrigin","grid","setOrigin","selectDestination","setDestination","mapRef","useRef","onMapLoad","map","current","panTo","setZoom","currentfips","useState","clickedfips","originfips","destinationfips","markers","selected","setSelected","infoWindowVisible","setInfoWindowVisible","marker","toISOString","scaledSize","Size","Point","anchor","strokeColor","strokeOpacity","strokeWeight","Locate","navigator","geolocation","getCurrentPosition","SearchOrigin","value","suggestions","setValue","clearSuggestions","requestOptions","location","radius","e","target","place_id","description","SearchDestination"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {GoogleMap, useLoadScript, Marker, InfoWindow, Polyline} from \"@react-google-maps/api\";\nimport usePlacesAutocomplete, {getGeocode, getLatLng} from \"use-places-autocomplete\";\nimport {Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption} from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\nimport mapStyles from './MapStyle';\nconst libraries = [\"places\"];\nlet polylines = [];\n\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"80%\",\n}\n\nconst center = {\n  lat: 40.7128,\n  lng: -74.0060,\n}\n\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n  streetViewControl: true,\n}\n \nfunction Map() {\n\n    const {isLoaded, loadError} = useLoadScript({\n      googleMapsApiKey: process.env.REACT_APP_GOOGLE_KEY,\n      libraries,\n    });\n\n    const changeAddressFormat = () => {\n      getDirection(origin, destination)\n      getOriginFips(`${origin[0].lat}`, `${origin[0].lng}`)\n      getDestinationFips(`${destination[0].lat}`, `${destination[0].lng}`)\n    }\n\n    //mode input can be driving(default), walking bicycling &mode=driving\n\n    const getDirection = (origin, destination) => {\n      const DirectionsService = new window.google.maps.DirectionsService();\n      DirectionsService.route({\n        origin: new window.google.maps.LatLng(origin[0].lat, origin[0].lng),\n        destination: new window.google.maps.LatLng(destination[0].lat, destination[0].lng),\n        travelMode: window.google.maps.TravelMode.DRIVING,\n      },(result, status) => {\n        if (status === window.google.maps.DirectionsStatus.OK) {\n          let coodinates = [] \n          let legs = result.routes[0].legs;\n          for (let i = 0; i < legs.length; i++) {\n            let steps = legs[i].steps;\n            for (let j = 0; j < steps.length; j++) {\n              let nextSegment = steps[j].path;\n              for (let k = 0; k < nextSegment.length; k++) {\n                coodinates.push({lat: nextSegment[k].lat(), lng: nextSegment[k].lng()}); \n              }\n            }\n          }\n          console.log(coodinates)\n          setPath(() => [{\n            pathCoordinates: coodinates,\n          }]);\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n      })\n    }\n    \n    const getClickedFips = React.useCallback((lat, lng) => {\n      const url = `https://geo.fcc.gov/api/census/area?lat=${lat}&lon=${lng}&format=json`\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          setClickedFips(() => [{\n            fips: data.results[0].county_fips,\n            county_name: data.results[0].county_name,\n          }]);\n      })\n    }, [])\n\n    const getCurrentFips = React.useCallback((lat, lng) => {\n      const url = `https://geo.fcc.gov/api/census/area?lat=${lat}&lon=${lng}&format=json`\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          setCurrentFips(() => [{\n            fips: data.results[0].county_fips,\n            county_name: data.results[0].county_name,\n          }]);\n      })\n    }, [])\n\n    const getOriginFips = React.useCallback((lat, lng) => {\n      const url = `https://geo.fcc.gov/api/census/area?lat=${lat}&lon=${lng}&format=json`\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          setOriginFips(() => [{\n            fips: data.results[0].county_fips,\n            county_name: data.results[0].county_name,\n          }]);\n      })\n    }, [])\n\n    const getDestinationFips = React.useCallback((lat, lng) => {\n      const url = `https://geo.fcc.gov/api/census/area?lat=${lat}&lon=${lng}&format=json`\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          setDestinationFips(() => [{\n            fips: data.results[0].county_fips,\n            county_name: data.results[0].county_name,\n          }]);\n      })\n    }, [])\n\n    const onMapClick = React.useCallback((event) => {\n      getClickedFips(event.latLng.lat(), event.latLng.lng())\n      const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${event.latLng.lat()},${event.latLng.lng()}&key=${process.env.REACT_APP_GOOGLE_KEY}`;\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          setMarkers(() => [\n            { \n              address: data.results[0].formatted_address,\n              lat: event.latLng.lat(),\n              lng: event.latLng.lng(),\n              time: new Date()\n          }]);\n      })\n    }, []);\n\n    const onLocate = React.useCallback((position) => {\n      getCurrentFips(position.coords.latitude, position.coords.longitude)\n      const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${position.coords.latitude},${position.coords.longitude}&key=${process.env.REACT_APP_GOOGLE_KEY}`;\n      fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        setMarkers(() => [{ \n          address: data.results[0].formatted_address,\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n          time: new Date()\n        }]);\n      })\n    }, []);\n\n    const selectOrigin = React.useCallback((grid, address) => {\n      setOrigin(() => [{\n        address: address,\n        lat: grid.lat,\n        lng: grid.lng,\n        time: new Date()\n      }]);\n    }, []);\n\n    const selectDestination = React.useCallback((grid, address) => {\n      setDestination(() => [{\n        address: address,\n        lat: grid.lat,\n        lng: grid.lng,\n        time: new Date()\n      }]);\n    }, []);\n    \n    const mapRef = React.useRef();\n    const onMapLoad = React.useCallback((map) => {\n      mapRef.current = map;\n    }, []);\n\n    const panTo = React.useCallback(({lat,lng}) => {\n      mapRef.current.panTo({lat,lng});\n      mapRef.current.setZoom(15);\n    }, []);\n\n    const [currentfips, setCurrentFips] = React.useState([]);\n    const [clickedfips, setClickedFips] = React.useState([]);\n    const [originfips, setOriginFips] = React.useState([]);\n    const [destinationfips, setDestinationFips] = React.useState([]);\n    const [markers, setMarkers] = React.useState([]);\n    const [selected, setSelected] = React.useState([null]);\n    const [origin, setOrigin] = React.useState([]);\n    const [destination, setDestination] = React.useState([]);\n    const [pathCoordinates, setPath] = React.useState([]);\n\n    const [infoWindowVisible, setInfoWindowVisible] = React.useState(false);\n\n    if(loadError) return \"Error loading maps\";\n    if(!isLoaded) return \"Loading Mpas\";\n    return (\n      <div className=\"map-container\">\n        <div className=\"map\">\n          <h1 id=\"map-logo\">\n            Covid Hater{\" \"}\n            <span role=\"img\" aria-label=\"virus\">🦠</span>\n          </h1>\n          <Locate panTo={panTo} onLocate={onLocate} />\n          <SearchOrigin panTo={panTo} selectOrigin={selectOrigin}  />\n          <SearchDestination panTo={panTo} selectDestination={selectDestination} />\n          <button className=\"direction-button\" onClick={origin && destination ? changeAddressFormat : null} >\n            Direction\n          </button>\n          <GoogleMap \n            mapContainerStyle={mapContainerStyle} \n            zoom={8} center={center} \n            options={options} \n            onClick={onMapClick} \n            onLoad={onMapLoad}\n          >\n            {markers.map((marker) => (\n              <Marker \n                key={marker.time.toISOString()} \n                position={{lat: marker.lat, lng: marker.lng}}\n                icon={{\n                  url:\"https://static.thenounproject.com/png/113403-200.png\",\n                  scaledSize: new window.google.maps.Size(50,50),\n                  origin: new window.google.maps.Point(0,0),\n                  anchor: new window.google.maps.Point(25,25),\n                }}\n                onClick={() => {\n                  setSelected(marker)\n                  setInfoWindowVisible(!infoWindowVisible)\n                }}\n              >\n              </Marker>\n            ))}\n            {origin.map((marker) => (\n              <Marker \n                key={marker.time.toISOString()} \n                position={{lat: marker.lat, lng: marker.lng}}\n                icon={{\n                  url:\"https://static.thenounproject.com/png/113403-200.png\",\n                  scaledSize: new window.google.maps.Size(50,50),\n                  origin: new window.google.maps.Point(0,0),\n                  anchor: new window.google.maps.Point(25,25),\n                }}\n                onClick={() => {\n                  setSelected(marker)\n                  setInfoWindowVisible(!infoWindowVisible)\n                }}\n              >\n              </Marker>\n            ))}\n            {destination.map((marker) => (\n              <Marker \n                key={marker.time.toISOString()} \n                position={{lat: marker.lat, lng: marker.lng}}\n                icon={{\n                  url:\"https://static.thenounproject.com/png/113403-200.png\",\n                  scaledSize: new window.google.maps.Size(50,50),\n                  origin: new window.google.maps.Point(0,0),\n                  anchor: new window.google.maps.Point(25,25),\n                }}\n                onClick={() => {\n                  setSelected(marker)\n                  setInfoWindowVisible(!infoWindowVisible)\n                }}\n              >\n              </Marker>\n            ))}\n            <Polyline\n                path={[\n                   {lat: 40.76633, lng: -73.82249},\n                {lat: 40.76632, lng: -73.82261000000001},\n                {lat: 40.7663, lng: -73.82289},\n                {lat: 40.766290000000005, lng: -73.82295},\n                {lat: 40.76628, lng: -73.82297000000001},\n                {lat: 40.766290000000005, lng: -73.82296000000001},\n                {lat: 40.76628, lng: -73.82299},\n                {lat: 40.766270000000006, lng: -73.82299},\n                {lat: 40.76626, lng: -73.82300000000001},\n                {lat: 40.76625000000001, lng: -73.82301000000001},\n                {lat: 40.76623, lng: -73.82301000000001},\n                {lat: 40.76592, lng: -73.82295},\n                {lat: 40.76592, lng: -73.82295},\n                {lat: 40.766160000000006, lng: -73.82098},\n                {lat: 40.76617, lng: -73.82091000000001},\n                {lat: 40.76625000000001, lng: -73.82023000000001},\n                {lat: 40.766310000000004, lng: -73.81970000000001},\n                {lat: 40.766470000000005, lng: -73.81839000000001},\n                {lat: 40.766470000000005, lng: -73.81836000000001},\n                {lat: 40.76659, lng: -73.81739},\n                {lat: 40.76659, lng: -73.81739},\n                {lat: 40.766650000000006, lng: -73.81739},\n                {lat: 40.766690000000004, lng: -73.81739},\n                {lat: 40.767590000000006, lng: -73.81737000000001},\n                {lat: 40.76769, lng: -73.81738},\n                {lat: 40.769130000000004, lng: -73.81735},\n                {lat: 40.769180000000006, lng: -73.81735},\n                {lat: 40.770300000000006, lng: -73.81732000000001},\n                {lat: 40.77037000000001, lng: -73.81732000000001},\n                {lat: 40.771480000000004, lng: -73.8173},\n                {lat: 40.77176, lng: -73.81732000000001},\n                {lat: 40.77192, lng: -73.81733000000001},\n                {lat: 40.77203, lng: -73.81734},\n                {lat: 40.77208, lng: -73.81734},\n                {lat: 40.77235, lng: -73.81736000000001},\n                {lat: 40.77268, lng: -73.81739},\n                {lat: 40.773070000000004, lng: -73.81742000000001},\n                {lat: 40.77364, lng: -73.81745000000001},\n                {lat: 40.773700000000005, lng: -73.81745000000001},\n                {lat: 40.77378, lng: -73.81746000000001},\n                {lat: 40.774440000000006, lng: -73.81751000000001},\n                {lat: 40.774530000000006, lng: -73.81751000000001},\n                {lat: 40.774620000000006, lng: -73.81753},\n                {lat: 40.77528, lng: -73.81757},\n                {lat: 40.775360000000006, lng: -73.81758},\n                {lat: 40.775740000000006, lng: -73.81762},\n                {lat: 40.7764, lng: -73.81766},\n                {lat: 40.77647, lng: -73.81764000000001},\n                {lat: 40.77671, lng: -73.81761},\n                {lat: 40.77711, lng: -73.81755000000001},\n                {lat: 40.77743, lng: -73.81751000000001},\n                {lat: 40.77776, lng: -73.81746000000001},\n                {lat: 40.77812, lng: -73.81741000000001},\n                {lat: 40.77911, lng: -73.81728000000001},\n                {lat: 40.78009, lng: -73.81715000000001},\n                {lat: 40.780730000000005, lng: -73.81706000000001},\n                {lat: 40.780800000000006, lng: -73.81705000000001},\n                {lat: 40.7815, lng: -73.81695},\n                {lat: 40.7815, lng: -73.81695},\n                {lat: 40.78139, lng: -73.81553000000001},\n                {lat: 40.78132, lng: -73.81464000000001},\n                {lat: 40.781310000000005, lng: -73.81453},\n                {lat: 40.7813, lng: -73.81434},\n                {lat: 40.781290000000006, lng: -73.81426},\n                {lat: 40.78128, lng: -73.8142},\n                {lat: 40.78125, lng: -73.81379000000001},\n                {lat: 40.781110000000005, lng: -73.81211},\n                {lat: 40.7811, lng: -73.81201},\n                {lat: 40.7811, lng: -73.81190000000001},\n                {lat: 40.781060000000004, lng: -73.81131},\n                {lat: 40.78105, lng: -73.81117},\n                {lat: 40.78099, lng: -73.81038000000001},\n                {lat: 40.78098000000001, lng: -73.81022},\n                {lat: 40.78096, lng: -73.80999},\n                {lat: 40.78094, lng: -73.80976000000001},\n                {lat: 40.7809, lng: -73.80928},\n                {lat: 40.780860000000004, lng: -73.8088},\n                {lat: 40.780820000000006, lng: -73.80835},\n                {lat: 40.780800000000006, lng: -73.80812},\n                {lat: 40.78079, lng: -73.80796000000001}]}\n                geodesic={true}\n                options={{\n                    strokeColor: \"#ff2527\",\n                    strokeOpacity: 0.75,\n                    strokeWeight: 2,\n                }}\n            />\n            {infoWindowVisible && (\n              <InfoWindow position={{lat: selected.lat, lng: selected.lng}}>\n                <div>\n                  <h2>Selected!</h2>\n                  <p>Address: {selected.address}</p>\n                  <p>Latitude: {selected.lat} Longitude:{selected.lng}</p>\n                </div>\n              </InfoWindow>\n            )}\n          </GoogleMap>\n        </div>\n      </div>\n    );\n}\n\nexport default Map;\n\nfunction Locate({ panTo, onLocate }) {\n  return (\n    <button className=\"locate\" onClick={() => {\n      navigator.geolocation.getCurrentPosition((position) => {\n        panTo({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        });\n        onLocate(position)\n      }, \n      () => null);\n    }}>\n      <h1 className=\"compass\">\n        <span role=\"img\" aria-label=\"compass\">🧭 </span>\n      </h1>\n    </button>\n  )\n}\n\nfunction SearchOrigin({ panTo, selectOrigin }) {\n\n  const {\n    value, \n    suggestions:{status, data}, \n    setValue, \n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: {lat: () => 40.7128, lng: () => -74.0060},\n      radius: 200 * 1000\n    }\n  })\n\n  return (\n      <div className=\"search-bar1\">\n        <Combobox \n          onSelect={async (address) => {\n            setValue(address, false);\n            clearSuggestions()\n            try {\n              const results = await getGeocode({address});\n              const { lat, lng } = await getLatLng(results[0]);\n              panTo({ lat, lng });\n              {selectOrigin({ lat, lng }, address)}\n            } catch(error){\n              console.log(\"Error!\")\n            }\n          }}\n        >\n          <ComboboxInput \n            value={value} \n            onChange={(e) => {\n              setValue(e.target.value)\n            }}\n            placeholder=\"Enter a address\"\n          />\n          <ComboboxPopover>\n            <ComboboxList>\n              {status === \"OK\" && \n                data.map(({place_id, description}) => (\n                  <ComboboxOption key={place_id} value={description}/>\n                ))}\n            </ComboboxList>\n          </ComboboxPopover>\n        </Combobox>\n      </div>\n  )\n}\n\nfunction SearchDestination({ panTo, selectDestination }) {\n\n  const {\n    value, \n    suggestions:{status, data}, \n    setValue, \n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: {lat: () => 40.7128, lng: () => -74.0060},\n      radius: 200 * 1000\n    }\n  })\n\n  return (\n      <div className=\"search-bar2\">\n        <Combobox \n          onSelect={async (address) => {\n            setValue(address, false);\n            clearSuggestions()\n            try {\n              const results = await getGeocode({address});\n              const { lat, lng } = await getLatLng(results[0]);\n              panTo({ lat, lng });\n              {selectDestination({ lat, lng }, address)}\n            } catch(error){\n              console.log(\"Error!\")\n            }\n          }}\n        >\n          <ComboboxInput \n            value={value} \n            onChange={(e) => {\n              setValue(e.target.value)\n            }}\n            placeholder=\"Enter a address\"\n          />\n          <ComboboxPopover>\n            <ComboboxList>\n              {status === \"OK\" && \n                data.map(({place_id, description}) => (\n                  <ComboboxOption key={place_id} value={description}/>\n                ))}\n            </ComboboxList>\n          </ComboboxPopover>\n        </Combobox>\n      </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}