{"ast":null,"code":"var _jsxFileName = \"/Users/dukhyunko/Development/Covid-Travel/Covid-Travel-Risk-Assessment-Tool-frontend/src/components/Search.js\";\nimport React from \"react\";\nimport { Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption } from \"@reach/combobox\";\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from \"use-places-autocomplete\";\n\nclass Search extends React.Component() {\n  constructor(...args) {\n    super(...args);\n    this.state = ({\n      value,\n      suggestions: {\n        status,\n        data\n      },\n      setValue,\n      clearSuggestions\n    } = usePlacesAutocomplete({\n      requestOptions: {\n        location: {\n          lat: () => 40.7128,\n          lng: () => -74.0060\n        },\n        radius: 200 * 1000\n      }\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-bar1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Combobox, {\n      onSelect: async address => {\n        setValue(address, false);\n        clearSuggestions();\n\n        try {\n          const results = await getGeocode({\n            address\n          });\n          const {\n            lat,\n            lng\n          } = await getLatLng(results[0]);\n          panTo({\n            lat,\n            lng\n          });\n          {\n            selectOrigin({\n              lat,\n              lng\n            }, address);\n          }\n        } catch (error) {\n          console.log(\"Error!\");\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ComboboxInput, {\n      value: value,\n      onChange: e => {\n        setValue(e.target.value);\n      },\n      placeholder: \"Enter a address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ComboboxPopover, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ComboboxList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }\n    }, status === \"OK\" && data.map(({\n      place_id,\n      description\n    }) => /*#__PURE__*/React.createElement(ComboboxOption, {\n      key: place_id,\n      value: description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-bar2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Combobox, {\n      onSelect: async address => {\n        setValue(address, false);\n        clearSuggestions();\n\n        try {\n          const results = await getGeocode({\n            address\n          });\n          const {\n            lat,\n            lng\n          } = await getLatLng(results[0]);\n          panTo({\n            lat,\n            lng\n          });\n          {\n            selectDeparture({\n              lat,\n              lng\n            }, address);\n          }\n        } catch (error) {\n          console.log(\"Error!\");\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ComboboxInput, {\n      value: value,\n      onChange: e => {\n        setValue(e.target.value);\n      },\n      placeholder: \"Enter a address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ComboboxPopover, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ComboboxList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, status === \"OK\" && data.map(({\n      place_id,\n      description\n    }) => /*#__PURE__*/React.createElement(ComboboxOption, {\n      key: place_id,\n      value: description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 23\n      }\n    })))))));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/dukhyunko/Development/Covid-Travel/Covid-Travel-Risk-Assessment-Tool-frontend/src/components/Search.js"],"names":["React","Combobox","ComboboxInput","ComboboxPopover","ComboboxList","ComboboxOption","usePlacesAutocomplete","getGeocode","getLatLng","Search","Component","state","value","suggestions","status","data","setValue","clearSuggestions","requestOptions","location","lat","lng","radius","render","address","results","panTo","selectOrigin","error","console","log","e","target","map","place_id","description","selectDeparture"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption} from \"@reach/combobox\";\nimport usePlacesAutocomplete, {getGeocode, getLatLng} from \"use-places-autocomplete\";\n\n\nclass Search extends React.Component () {\n\n    state =  {\n      value, \n      suggestions:{status, data}, \n      setValue, \n      clearSuggestions,\n    } = usePlacesAutocomplete({\n      requestOptions: {\n        location: {lat: () => 40.7128, lng: () => -74.0060},\n        radius: 200 * 1000\n      }\n    })\n\n    render() {\n      return (\n          <>\n            <div className=\"search-bar1\">\n              <Combobox \n                onSelect={async (address) => {\n                  setValue(address, false);\n                  clearSuggestions()\n                  try {\n                    const results = await getGeocode({address});\n                    const { lat, lng } = await getLatLng(results[0]);\n                    panTo({ lat, lng });\n                    {selectOrigin({ lat, lng }, address)}\n                  } catch(error){\n                    console.log(\"Error!\")\n                  }\n                }}\n              >\n                <ComboboxInput \n                  value={value} \n                  onChange={(e) => {\n                    setValue(e.target.value)\n                  }}\n                  placeholder=\"Enter a address\"\n                />\n                <ComboboxPopover>\n                  <ComboboxList>\n                    {status === \"OK\" && \n                      data.map(({place_id, description}) => (\n                        <ComboboxOption key={place_id} value={description}/>\n                      ))}\n                  </ComboboxList>\n                </ComboboxPopover>\n              </Combobox>\n            </div>\n            <div className=\"search-bar2\">\n            <Combobox \n              onSelect={async (address) => {\n                setValue(address, false);\n                clearSuggestions()\n                try {\n                  const results = await getGeocode({address});\n                  const { lat, lng } = await getLatLng(results[0]);\n                  panTo({ lat, lng });\n                  {selectDeparture({ lat, lng }, address)}\n                } catch(error){\n                  console.log(\"Error!\")\n                }\n              }}\n            >\n              <ComboboxInput \n                value={value} \n                onChange={(e) => {\n                  setValue(e.target.value)\n                }}\n                placeholder=\"Enter a address\"\n              />\n              <ComboboxPopover>\n                <ComboboxList>\n                  {status === \"OK\" && \n                    data.map(({place_id, description}) => (\n                      <ComboboxOption key={place_id} value={description}/>\n                    ))}\n                </ComboboxList>\n              </ComboboxPopover>\n            </Combobox>\n          </div>\n        </>\n      )\n    }\n  }\n  \nexport default Search;"]},"metadata":{},"sourceType":"module"}