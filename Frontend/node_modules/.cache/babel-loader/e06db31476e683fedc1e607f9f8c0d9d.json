{"ast":null,"code":"var _jsxFileName = \"/Users/dukhyunko/Development/Covid-Travel/Covid-Travel-Risk-Assessment-Tool-frontend/src/components/Map.js\";\nimport React from \"react\";\nimport Tripinfo from \"./Tripinfo\";\nimport SaveTripForm from \"./SaveTripForm\";\nimport { GoogleMap, useLoadScript, Marker, InfoWindow, DirectionsRenderer } from \"@react-google-maps/api\";\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from \"use-places-autocomplete\";\nimport { Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption } from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\nimport mapStyles from './MapStyle';\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"100%\"\n};\nconst center = {\n  lat: 40.7128,\n  lng: -74.0060\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n  streetViewControl: true\n};\n\nfunction openRightNav() {\n  document.getElementById(\"mySidenav\").style.width = \"250px\";\n}\n\nfunction closeRightNav() {\n  document.getElementById(\"mySidenav\").style.width = \"0\";\n}\n\nfunction openLeftNav() {\n  document.querySelector(\"h4.search-bar-2-1\").style.display = \"none\";\n  document.querySelector(\"button.search-place\").style.display = \"none\";\n  document.getElementById(\"left-nav\").style.width = \"250px\";\n  document.querySelector(\"button.open-search\").style.display = \"none\";\n  setTimeout(() => {\n    document.querySelector(\"button.close-left-nav\").style.display = \"block\";\n  }, 200);\n}\n\nfunction closeLeftNav() {\n  document.getElementById(\"left-nav\").style.width = \"0%\";\n  document.querySelector(\"button.close-left-nav\").style.display = \"none\";\n  setTimeout(() => {\n    document.querySelector(\"button.open-search\").style.display = \"block\";\n  }, 200);\n}\n\nfunction renderSaveTripButton() {\n  document.querySelector(\"button.save-trips-button\").style.display = \"block\";\n}\n\nlet modal = false;\n\nfunction toggleModal() {\n  modal = !modal;\n\n  if (modal === true) {\n    document.querySelector(\".modal\").style.display = \"block\";\n  } else {\n    document.querySelector(\".modal\").style.display = \"none\";\n  }\n}\n\nfunction notEmpty(array) {\n  return array.length > 0;\n} // not very practical right now. in terms of getting direction\n// direction button on the clicked location\n// grab all the county on the way to the destination\n// create new component with all the direction score (button to save the trip)\n// population / 100,000 * cases\n// Intermittent issue with asynch fetch - promises return late after render, maybe need useEffect?\n// Repositioning map to route and center point\n\n\nfunction Map(props) {\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_KEY,\n    libraries\n  });\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback(map => {\n    mapRef.current = map;\n  }, []);\n  const panTo = React.useCallback(({\n    lat,\n    lng\n  }) => {\n    mapRef.current.panTo({\n      lat,\n      lng\n    });\n    mapRef.current.setZoom(15);\n  }, []);\n\n  const applyAddress = () => {\n    renderSaveTripButton();\n    openRightNav();\n    openLeftNav();\n    getDirection(origin, destination);\n    getOriginFips(`${origin[0].lat}`, `${origin[0].lng}`);\n    getDestinationFips(`${destination[0].lat}`, `${destination[0].lng}`);\n  }; //mode input can be driving(default), walking bicycling &mode=driving\n\n\n  const getClickedFips = React.useCallback((lat, lng) => {\n    const url = `https://geo.fcc.gov/api/census/area?lat=${lat}&lon=${lng}&format=json`;\n    fetch(url).then(response => response.json()).then(data => {\n      if (notEmpty(data.results)) {\n        setClickedFips(() => [{\n          fips: data.results[0].county_fips,\n          county_name: data.results[0].county_name\n        }]);\n      } else {\n        window.alert(\"Choose a place in US\");\n      }\n    });\n  }, []);\n  const getCurrentFips = React.useCallback((lat, lng) => {\n    const url = `https://geo.fcc.gov/api/census/area?lat=${lat}&lon=${lng}&format=json`;\n    fetch(url).then(response => response.json()).then(data => {\n      setCurrentFips(() => [{\n        fips: data.results[0].county_fips,\n        county_name: data.results[0].county_name\n      }]);\n    });\n  }, []);\n  const getOriginFips = React.useCallback((lat, lng) => {\n    const url = `https://geo.fcc.gov/api/census/area?lat=${lat}&lon=${lng}&format=json`;\n    fetch(url).then(response => response.json()).then(data => {\n      setOriginFips(() => [{\n        fips: data.results[0].county_fips,\n        county_name: data.results[0].county_name\n      }]);\n    });\n  }, []);\n  const getDestinationFips = React.useCallback((lat, lng) => {\n    const url = `https://geo.fcc.gov/api/census/area?lat=${lat}&lon=${lng}&format=json`;\n    fetch(url).then(response => response.json()).then(data => {\n      setDestinationFips(() => [{\n        fips: data.results[0].county_fips,\n        county_name: data.results[0].county_name\n      }]);\n    });\n  }, []);\n  const onMapClick = React.useCallback(event => {\n    getClickedFips(event.latLng.lat(), event.latLng.lng());\n    const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${event.latLng.lat()},${event.latLng.lng()}&key=${process.env.REACT_APP_GOOGLE_KEY}`;\n    fetch(url).then(response => response.json()).then(data => {\n      setMarkers(() => [{\n        address: data.results[0].formatted_address,\n        lat: event.latLng.lat(),\n        lng: event.latLng.lng(),\n        time: new Date()\n      }]);\n      setDestination(() => [{\n        address: data.results[0].formatted_address,\n        lat: event.latLng.lat(),\n        lng: event.latLng.lng(),\n        time: new Date()\n      }]);\n    });\n  }, []);\n  const selectOrigin = React.useCallback((grid, address) => {\n    setOrigin(() => [{\n      address: address,\n      lat: grid.lat,\n      lng: grid.lng,\n      time: new Date()\n    }]);\n  }, []);\n  const selectDestination = React.useCallback((grid, address) => {\n    setDestination(() => [{\n      address: address,\n      lat: grid.lat,\n      lng: grid.lng,\n      time: new Date()\n    }]);\n  }, []);\n\n  const getDirection = (origin, destination) => {\n    const DirectionsService = new window.google.maps.DirectionsService();\n    DirectionsService.route({\n      origin: new window.google.maps.LatLng(origin[0].lat, origin[0].lng),\n      destination: new window.google.maps.LatLng(destination[0].lat, destination[0].lng),\n      travelMode: window.google.maps.TravelMode.DRIVING\n    }, (result, status) => {\n      if (status === window.google.maps.DirectionsStatus.OK) {\n        let coordinates = [];\n        let legs = result.routes[0].legs;\n\n        for (let i = 0; i < legs.length; i++) {\n          let steps = legs[i].steps;\n\n          for (let j = 0; j < steps.length; j++) {\n            let nextSegment = steps[j].path;\n\n            for (let k = 0; k < nextSegment.length; k++) {\n              coordinates.push({\n                lat: nextSegment[k].lat(),\n                lng: nextSegment[k].lng()\n              });\n            }\n          }\n        }\n\n        setPath(() => [{\n          path: coordinates,\n          directionInfo: result\n        }]);\n      } else {\n        console.error(`error fetching directions ${result}`);\n      }\n    });\n  };\n\n  const [currentfips, setCurrentFips] = React.useState([]);\n  const [clickedfips, setClickedFips] = React.useState([]);\n  const [originfips, setOriginFips] = React.useState([]);\n  const [destinationfips, setDestinationFips] = React.useState([]);\n  const [markers, setMarkers] = React.useState([]);\n  const [selected, setSelected] = React.useState([null]);\n  const [origin, setOrigin] = React.useState([]);\n  const [destination, setDestination] = React.useState([]);\n  const [path, setPath] = React.useState([]);\n  const [riskAssessment, setRiskAssessment] = React.useState([]); //error handling for path coordinates\n\n  const [infoWindowVisible, setInfoWindowVisible] = React.useState(false);\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"Loading Mpas\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: mapContainerStyle,\n    zoom: 8,\n    center: center,\n    options: options,\n    onClick: onMapClick,\n    onLoad: onMapLoad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Locate, {\n    panTo: panTo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"search-bar-2-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(SearchPlace, {\n    panTo: panTo,\n    selectDestination: selectDestination,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 46\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"search-place-2\",\n    onClick: notEmpty(destination) ? openLeftNav : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 15\n    }\n  }, \"Get Direction\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"left-nav\",\n    className: \"left-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"search-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  }, \"Starting Point:\", /*#__PURE__*/React.createElement(SearchOrigin, {\n    panTo: panTo,\n    selectOrigin: selectOrigin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 59\n    }\n  })), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"search-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 17\n    }\n  }, \"End Point:\", notEmpty(destination) ? /*#__PURE__*/React.createElement(SearchDestination, {\n    panTo: panTo,\n    selectDestination: selectDestination,\n    destination: destination,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 79\n    }\n  }) : null, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left-nav-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 17\n    }\n  }, notEmpty(origin) && notEmpty(destination) ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"save-trips-button\",\n    onClick: toggleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 21\n    }\n  }, \"Save This Trip\") : null, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"direction-button\",\n    onClick: notEmpty(origin) && notEmpty(destination) ? applyAddress : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 19\n    }\n  }, \"Get Direction\"))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close-left-nav\",\n    onClick: closeLeftNav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 15\n    }\n  }, \"<\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"open-search\",\n    onClick: openLeftNav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 15\n    }\n  }, \">\"), markers.map(marker => /*#__PURE__*/React.createElement(Marker, {\n    key: marker.time.toISOString(),\n    position: {\n      lat: marker.lat,\n      lng: marker.lng\n    },\n    icon: {\n      url: \"https://static.thenounproject.com/png/113403-200.png\",\n      scaledSize: new window.google.maps.Size(50, 50),\n      origin: new window.google.maps.Point(0, 0),\n      anchor: new window.google.maps.Point(25, 25)\n    },\n    onClick: () => {\n      setSelected(marker);\n      setInfoWindowVisible(!infoWindowVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 17\n    }\n  })), origin.map(marker => /*#__PURE__*/React.createElement(Marker, {\n    key: marker.time.toISOString(),\n    position: {\n      lat: marker.lat,\n      lng: marker.lng\n    },\n    icon: {\n      url: \"https://static.thenounproject.com/png/113403-200.png\",\n      scaledSize: new window.google.maps.Size(50, 50),\n      origin: new window.google.maps.Point(0, 0),\n      anchor: new window.google.maps.Point(25, 25)\n    },\n    onClick: () => {\n      setSelected(marker);\n      setInfoWindowVisible(!infoWindowVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 17\n    }\n  })), destination.map(marker => /*#__PURE__*/React.createElement(Marker, {\n    key: marker.time.toISOString(),\n    position: {\n      lat: marker.lat,\n      lng: marker.lng\n    },\n    icon: {\n      url: \"https://static.thenounproject.com/png/113403-200.png\",\n      scaledSize: new window.google.maps.Size(50, 50),\n      origin: new window.google.maps.Point(0, 0),\n      anchor: new window.google.maps.Point(25, 25)\n    },\n    onClick: () => {\n      setSelected(marker);\n      setInfoWindowVisible(!infoWindowVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 17\n    }\n  })), infoWindowVisible && /*#__PURE__*/React.createElement(InfoWindow, {\n    position: {\n      lat: selected.lat,\n      lng: selected.lng\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 21\n    }\n  }, \"Address: \", selected.address), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"search-place\",\n    onClick: notEmpty(destination) ? openLeftNav : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 21\n    }\n  }, \"Get Direction\"))), notEmpty(destinationfips) && notEmpty(path) ? /*#__PURE__*/React.createElement(DirectionsRenderer, {\n    directions: path[0].directionInfo,\n    panel: document.getElementById('panel'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 65\n    }\n  }) : null), notEmpty(destinationfips) && notEmpty(path) ? /*#__PURE__*/React.createElement(Tripinfo, {\n    direction: path[0].directionInfo,\n    token: props.token,\n    destinationfips: destinationfips,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 60\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"mySidenav\",\n    className: \"sidenav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"closebtn\",\n    onClick: closeRightNav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 15\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 15\n    }\n  }))), notEmpty(destinationfips) && notEmpty(path) ? /*#__PURE__*/React.createElement(Tripinfo, {\n    direction: path[0].directionInfo,\n    token: props.token,\n    destinationfips: destinationfips,\n    setRiskAssessment: setRiskAssessment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 58\n    }\n  }) : null, notEmpty(destinationfips) && notEmpty(path) ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"show-direction\",\n    onClick: openRightNav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 58\n    }\n  }, \"Show Direction\") : null, /*#__PURE__*/React.createElement(SaveTripForm, {\n    toggleModal: toggleModal,\n    destination: destination,\n    origin: origin,\n    currentUser: props.currentUser,\n    riskAssessment: riskAssessment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 11\n    }\n  }));\n}\n\nexport default Map;\n\nfunction Locate({\n  panTo\n}) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"locate\",\n    onClick: () => {\n      navigator.geolocation.getCurrentPosition(position => {\n        panTo({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      }, () => null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"compass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"compass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 9\n    }\n  }, \"\\uD83E\\uDDED\")));\n}\n\nfunction SearchPlace({\n  panTo,\n  selectDestination\n}) {\n  const {\n    value,\n    suggestions: {\n      status,\n      data\n    },\n    setValue,\n    clearSuggestions\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      componentRestrictions: {\n        country: \"us\"\n      },\n      location: {\n        lat: () => 40.7128,\n        lng: () => -74.0060\n      },\n      radius: 200 * 1000\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-bar2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Combobox, {\n    onSelect: async address => {\n      setValue(address, false);\n      clearSuggestions();\n\n      try {\n        const results = await getGeocode({\n          address\n        });\n        const {\n          lat,\n          lng\n        } = await getLatLng(results[0]);\n        panTo({\n          lat,\n          lng\n        });\n        {\n          selectDestination({\n            lat,\n            lng\n          }, address);\n        }\n      } catch (error) {\n        console.log(\"Error!\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxInput, {\n    value: value,\n    onChange: e => {\n      setValue(e.target.value);\n    },\n    placeholder: \"Enter a destination address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ComboboxPopover, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 13\n    }\n  }, status === \"OK\" && data.map(({\n    place_id,\n    description\n  }) => /*#__PURE__*/React.createElement(ComboboxOption, {\n    key: place_id,\n    value: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 19\n    }\n  }))))));\n}\n\nfunction SearchOrigin({\n  panTo,\n  selectOrigin\n}) {\n  const {\n    value,\n    suggestions: {\n      status,\n      data\n    },\n    setValue,\n    clearSuggestions\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      componentRestrictions: {\n        country: \"us\"\n      },\n      location: {\n        lat: () => 40.7128,\n        lng: () => -74.0060\n      },\n      radius: 200 * 1000\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-bar1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Combobox, {\n    onSelect: async address => {\n      setValue(address, false);\n      clearSuggestions();\n\n      try {\n        const results = await getGeocode({\n          address\n        });\n        const {\n          lat,\n          lng\n        } = await getLatLng(results[0]);\n        panTo({\n          lat,\n          lng\n        });\n        {\n          selectOrigin({\n            lat,\n            lng\n          }, address);\n        }\n      } catch (error) {\n        console.log(\"Error!\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxInput, {\n    value: value,\n    onChange: e => {\n      setValue(e.target.value);\n    },\n    placeholder: \"Enter a start address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ComboboxPopover, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 13\n    }\n  }, status === \"OK\" && data.map(({\n    place_id,\n    description\n  }) => /*#__PURE__*/React.createElement(ComboboxOption, {\n    key: place_id,\n    value: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 19\n    }\n  }))))));\n}\n\nfunction SearchDestination({\n  panTo,\n  selectDestination,\n  destination\n}) {\n  const {\n    value,\n    suggestions: {\n      status,\n      data\n    },\n    setValue,\n    clearSuggestions\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      componentRestrictions: {\n        country: \"us\"\n      },\n      location: {\n        lat: () => 40.7128,\n        lng: () => -74.0060\n      },\n      radius: 200 * 1000\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-bar2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Combobox, {\n    onSelect: async address => {\n      setValue(address, false);\n      clearSuggestions();\n\n      try {\n        const results = await getGeocode({\n          address\n        });\n        const {\n          lat,\n          lng\n        } = await getLatLng(results[0]);\n        panTo({\n          lat,\n          lng\n        });\n        {\n          selectDestination({\n            lat,\n            lng\n          }, address);\n        }\n      } catch (error) {\n        console.log(\"Error!\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxInput, {\n    value: value,\n    onChange: e => {\n      setValue(e.target.value);\n    },\n    placeholder: destination[0].address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ComboboxPopover, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 13\n    }\n  }, status === \"OK\" && data.map(({\n    place_id,\n    description\n  }) => /*#__PURE__*/React.createElement(ComboboxOption, {\n    key: place_id,\n    value: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 19\n    }\n  })))))) // value in the place holder\n  ;\n}","map":{"version":3,"sources":["/Users/dukhyunko/Development/Covid-Travel/Covid-Travel-Risk-Assessment-Tool-frontend/src/components/Map.js"],"names":["React","Tripinfo","SaveTripForm","GoogleMap","useLoadScript","Marker","InfoWindow","DirectionsRenderer","usePlacesAutocomplete","getGeocode","getLatLng","Combobox","ComboboxInput","ComboboxPopover","ComboboxList","ComboboxOption","mapStyles","libraries","mapContainerStyle","width","height","center","lat","lng","options","styles","disableDefaultUI","zoomControl","streetViewControl","openRightNav","document","getElementById","style","closeRightNav","openLeftNav","querySelector","display","setTimeout","closeLeftNav","renderSaveTripButton","modal","toggleModal","notEmpty","array","length","Map","props","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_KEY","mapRef","useRef","onMapLoad","useCallback","map","current","panTo","setZoom","applyAddress","getDirection","origin","destination","getOriginFips","getDestinationFips","getClickedFips","url","fetch","then","response","json","data","results","setClickedFips","fips","county_fips","county_name","window","alert","getCurrentFips","setCurrentFips","setOriginFips","setDestinationFips","onMapClick","event","latLng","setMarkers","address","formatted_address","time","Date","setDestination","selectOrigin","grid","setOrigin","selectDestination","DirectionsService","google","maps","route","LatLng","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","coordinates","legs","routes","i","steps","j","nextSegment","path","k","push","setPath","directionInfo","console","error","currentfips","useState","clickedfips","originfips","destinationfips","markers","selected","setSelected","riskAssessment","setRiskAssessment","infoWindowVisible","setInfoWindowVisible","marker","toISOString","scaledSize","Size","Point","anchor","token","currentUser","Locate","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","SearchPlace","value","suggestions","setValue","clearSuggestions","requestOptions","componentRestrictions","country","location","radius","log","e","target","place_id","description","SearchOrigin","SearchDestination"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Tripinfo from \"./Tripinfo\"\nimport SaveTripForm from \"./SaveTripForm\"\nimport {GoogleMap, useLoadScript, Marker, InfoWindow, DirectionsRenderer} from \"@react-google-maps/api\";\nimport usePlacesAutocomplete, {getGeocode, getLatLng} from \"use-places-autocomplete\";\nimport {Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption} from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\nimport mapStyles from './MapStyle';\nconst libraries = [\"places\"];\n\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"100%\",\n}\n\nconst center = {\n  lat: 40.7128,\n  lng: -74.0060,\n}\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n  streetViewControl: true,\n}\n\nfunction openRightNav() {\n  document.getElementById(\"mySidenav\").style.width = \"250px\";\n}\n\nfunction closeRightNav() {\n  document.getElementById(\"mySidenav\").style.width = \"0\";\n}\n\nfunction openLeftNav() {\n  document.querySelector(\"h4.search-bar-2-1\").style.display = \"none\"\n  document.querySelector(\"button.search-place\").style.display = \"none\"\n  document.getElementById(\"left-nav\").style.width = \"250px\";\n  document.querySelector(\"button.open-search\").style.display = \"none\"\n  setTimeout(() => {\n  document.querySelector(\"button.close-left-nav\").style.display = \"block\"\n  },200)\n}\n\nfunction closeLeftNav() {\n  document.getElementById(\"left-nav\").style.width = \"0%\";\n  document.querySelector(\"button.close-left-nav\").style.display = \"none\"\n  setTimeout(() => {\n    document.querySelector(\"button.open-search\").style.display = \"block\"\n  },200)\n}\n\nfunction renderSaveTripButton() {\n  document.querySelector(\"button.save-trips-button\").style.display = \"block\"\n}\n\nlet modal = false\nfunction toggleModal() {\n  modal = !modal\n  if (modal === true){\n    document.querySelector(\".modal\").style.display = \"block\"\n  } else {\n    document.querySelector(\".modal\").style.display = \"none\"\n  }\n}\n\nfunction notEmpty(array) {\n  return array.length > 0\n}\n \n// not very practical right now. in terms of getting direction\n// direction button on the clicked location\n// grab all the county on the way to the destination\n// create new component with all the direction score (button to save the trip)\n// population / 100,000 * cases\n// Intermittent issue with asynch fetch - promises return late after render, maybe need useEffect?\n// Repositioning map to route and center point\n\nfunction Map(props) {\n    const {isLoaded, loadError} = useLoadScript({\n      googleMapsApiKey: process.env.REACT_APP_GOOGLE_KEY,\n      libraries,\n    });\n\n    const mapRef = React.useRef();\n    const onMapLoad = React.useCallback((map) => {\n      mapRef.current = map;\n    }, []);\n\n    const panTo = React.useCallback(({lat,lng}) => {\n      mapRef.current.panTo({lat,lng});\n      mapRef.current.setZoom(15);\n    }, []);\n\n    const applyAddress = () => {\n      renderSaveTripButton()\n      openRightNav()\n      openLeftNav()\n      getDirection(origin, destination)\n      getOriginFips(`${origin[0].lat}`, `${origin[0].lng}`)\n      getDestinationFips(`${destination[0].lat}`, `${destination[0].lng}`)\n    }\n\n    //mode input can be driving(default), walking bicycling &mode=driving\n    \n    const getClickedFips = React.useCallback((lat, lng) => {\n      const url = `https://geo.fcc.gov/api/census/area?lat=${lat}&lon=${lng}&format=json`\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          if (notEmpty(data.results)){\n          setClickedFips(() => [{\n            fips: data.results[0].county_fips,\n            county_name: data.results[0].county_name,\n          }]);\n          } else {\n            window.alert(\"Choose a place in US\")\n          }\n      })\n    }, [])\n\n    const getCurrentFips = React.useCallback((lat, lng) => {\n      const url = `https://geo.fcc.gov/api/census/area?lat=${lat}&lon=${lng}&format=json`\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          setCurrentFips(() => [{\n            fips: data.results[0].county_fips,\n            county_name: data.results[0].county_name,\n          }]);\n      })\n    }, [])\n\n    const getOriginFips = React.useCallback((lat, lng) => {\n      const url = `https://geo.fcc.gov/api/census/area?lat=${lat}&lon=${lng}&format=json`\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          setOriginFips(() => [{\n            fips: data.results[0].county_fips,\n            county_name: data.results[0].county_name,\n          }]);\n      })\n    }, [])\n\n    const getDestinationFips = React.useCallback((lat, lng) => {\n      const url = `https://geo.fcc.gov/api/census/area?lat=${lat}&lon=${lng}&format=json`\n      fetch(url)\n        .then(response => response.json())\n        .then(data => { \n          setDestinationFips(() => [{\n            fips: data.results[0].county_fips,\n            county_name: data.results[0].county_name,\n          }]);\n      })\n    }, [])\n   \n    const onMapClick = React.useCallback((event) => {\n      getClickedFips(event.latLng.lat(), event.latLng.lng())\n      const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${event.latLng.lat()},${event.latLng.lng()}&key=${process.env.REACT_APP_GOOGLE_KEY}`;\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          setMarkers(() => [\n            { \n              address: data.results[0].formatted_address,\n              lat: event.latLng.lat(),\n              lng: event.latLng.lng(),\n              time: new Date()\n          }])\n          setDestination(() => [\n            {\n              address: data.results[0].formatted_address,\n              lat: event.latLng.lat(),\n              lng: event.latLng.lng(),\n              time: new Date()\n          }])\n      })\n    }, []);\n\n    const selectOrigin = React.useCallback((grid, address) => {\n      setOrigin(() => [{\n        address: address,\n        lat: grid.lat,\n        lng: grid.lng,\n        time: new Date()\n      }]);\n    }, []);\n\n    const selectDestination = React.useCallback((grid, address) => {\n      setDestination(() => [{\n        address: address,\n        lat: grid.lat,\n        lng: grid.lng,\n        time: new Date()\n      }]);\n    }, []);\n    \n    const getDirection = (origin, destination) => {\n      const DirectionsService = new window.google.maps.DirectionsService();\n      DirectionsService.route({\n        origin: new window.google.maps.LatLng(origin[0].lat, origin[0].lng),\n        destination: new window.google.maps.LatLng(destination[0].lat, destination[0].lng),\n        travelMode: window.google.maps.TravelMode.DRIVING,\n      },(result, status) => {\n        if (status === window.google.maps.DirectionsStatus.OK) {\n          let coordinates = []\n          let legs = result.routes[0].legs;\n          for (let i = 0; i < legs.length; i++) {\n            let steps = legs[i].steps;\n            for (let j = 0; j < steps.length; j++) {\n              let nextSegment = steps[j].path;\n              for (let k = 0; k < nextSegment.length; k++) {\n                coordinates.push({lat: nextSegment[k].lat(), lng: nextSegment[k].lng()}); \n              }\n            }\n          }\n          setPath(() => [{\n            path: coordinates,\n            directionInfo: result\n          }]);\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n      })\n    }\n    \n    const [currentfips, setCurrentFips] = React.useState([]);\n    const [clickedfips, setClickedFips] = React.useState([]);\n    const [originfips, setOriginFips] = React.useState([]);\n    const [destinationfips, setDestinationFips] = React.useState([]);\n    const [markers, setMarkers] = React.useState([]);\n    const [selected, setSelected] = React.useState([null]);\n    const [origin, setOrigin] = React.useState([]);\n    const [destination, setDestination] = React.useState([]);\n    const [path, setPath] = React.useState([]);\n    const [riskAssessment, setRiskAssessment] = React.useState([]);\n\n    //error handling for path coordinates\n    const [infoWindowVisible, setInfoWindowVisible] = React.useState(false);\n    if(loadError) return \"Error loading maps\";\n    if(!isLoaded) return \"Loading Mpas\"\n\n    return (\n        <div className=\"map-container\">\n          <div className=\"map\">\n            <GoogleMap \n              mapContainerStyle={mapContainerStyle} \n              zoom={8} center={center} \n              options={options} \n              onClick={onMapClick} \n              onLoad={onMapLoad}\n            >\n              <Locate panTo={panTo} />\n              <h4 className=\"search-bar-2-1\"><SearchPlace panTo={panTo} selectDestination={selectDestination} /></h4>\n              <button className=\"search-place-2\" onClick={notEmpty(destination) ? openLeftNav : null}>Get Direction</button>\n              <div id=\"left-nav\" className=\"left-nav\">\n                <h4 className=\"search-bar\">Starting Point:<SearchOrigin panTo={panTo} selectOrigin={selectOrigin} /></h4>\n                <h4 className=\"search-bar\">End Point:{notEmpty(destination) ? <SearchDestination panTo={panTo} selectDestination={selectDestination} destination={destination} /> : null} </h4>\n                <div className=\"left-nav-button-container\">\n                  {notEmpty(origin) && notEmpty(destination) ?\n                    <button className=\"save-trips-button\" onClick={toggleModal} >\n                      Save This Trip\n                    </button> \n                    : null\n                  }\n                  <button className=\"direction-button\" onClick={notEmpty(origin) && notEmpty(destination) ? applyAddress : null} >\n                    Get Direction\n                  </button>\n                </div> \n              </div>\n              <button className=\"close-left-nav\" onClick={closeLeftNav}>&lt;</button>\n              <button className=\"open-search\" onClick={openLeftNav}>&gt;</button>\n              {markers.map((marker) => (\n                <Marker \n                  key={marker.time.toISOString()} \n                  position={{lat: marker.lat, lng: marker.lng}}\n                  icon={{\n                    url:\"https://static.thenounproject.com/png/113403-200.png\",\n                    scaledSize: new window.google.maps.Size(50,50),\n                    origin: new window.google.maps.Point(0,0),\n                    anchor: new window.google.maps.Point(25,25),\n                  }}\n                  onClick={() => {\n                    setSelected(marker)\n                    setInfoWindowVisible(!infoWindowVisible)\n                  }}\n                >\n                </Marker>\n              ))}\n              {origin.map((marker) => (\n                <Marker \n                  key={marker.time.toISOString()} \n                  position={{lat: marker.lat, lng: marker.lng}}\n                  icon={{\n                    url:\"https://static.thenounproject.com/png/113403-200.png\",\n                    scaledSize: new window.google.maps.Size(50,50),\n                    origin: new window.google.maps.Point(0,0),\n                    anchor: new window.google.maps.Point(25,25),\n                  }}\n                  onClick={() => {\n                    setSelected(marker)\n                    setInfoWindowVisible(!infoWindowVisible)\n                  }}\n                >\n                </Marker>\n              ))}\n              {destination.map((marker) => (\n                <Marker \n                  key={marker.time.toISOString()} \n                  position={{lat: marker.lat, lng: marker.lng}}\n                  icon={{\n                    url:\"https://static.thenounproject.com/png/113403-200.png\",\n                    scaledSize: new window.google.maps.Size(50,50),\n                    origin: new window.google.maps.Point(0,0),\n                    anchor: new window.google.maps.Point(25,25),\n                  }}\n                  onClick={() => {\n                    setSelected(marker)\n                    setInfoWindowVisible(!infoWindowVisible)\n                  }}\n                >\n                </Marker>\n              ))}\n              {infoWindowVisible && (\n                <InfoWindow position={{lat: selected.lat, lng: selected.lng}}>\n                  <div>\n                    <h4>Address: {selected.address}</h4>\n                    <button className=\"search-place\" onClick={notEmpty(destination) ? openLeftNav : null}>Get Direction</button>\n                  </div>\n                </InfoWindow>\n              )}\n                 {notEmpty(destinationfips) && notEmpty(path) ? <DirectionsRenderer directions={path[0].directionInfo} panel={ document.getElementById('panel') } /> : null}\n            </GoogleMap>\n            {notEmpty(destinationfips) && notEmpty(path) ? <Tripinfo direction={path[0].directionInfo} token={props.token} destinationfips={destinationfips} /> : null}\n            <div id=\"mySidenav\" className=\"sidenav\">\n              <a className=\"closebtn\" onClick={closeRightNav}>&times;</a>\n              <div id=\"panel\"></div>\n            </div>\n          </div>\n          {notEmpty(destinationfips) && notEmpty(path) ? <Tripinfo direction={path[0].directionInfo} token={props.token} destinationfips={destinationfips} setRiskAssessment={setRiskAssessment} /> : null}\n          {notEmpty(destinationfips) && notEmpty(path) ? <button className=\"show-direction\" onClick={openRightNav} >Show Direction</button> : null }\n          <SaveTripForm toggleModal={toggleModal} destination={destination} origin={origin} currentUser={props.currentUser} riskAssessment={riskAssessment} />\n        </div>\n    );\n}\n\nexport default Map;\n\nfunction Locate({ panTo }) {\n  return (\n    <button className=\"locate\" onClick={() => {\n      navigator.geolocation.getCurrentPosition((position) => {\n        panTo({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        });\n      }, \n      () => null);\n    }}>\n      <h1 className=\"compass\">\n        <span role=\"img\" aria-label=\"compass\">🧭</span>\n      </h1>\n    </button>\n  )\n}\n\nfunction SearchPlace({ panTo, selectDestination }) {\n\n  const {\n    value, \n    suggestions:{status, data}, \n    setValue, \n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      componentRestrictions: {country: \"us\"},\n      location: {lat: () => 40.7128, lng: () => -74.0060},\n      radius: 200 * 1000\n    }\n  })\n\n  return (\n      <div className=\"search-bar2\">\n        <Combobox \n          onSelect={async (address) => {\n            setValue(address, false);\n            clearSuggestions()\n            try {\n              const results = await getGeocode({address});\n              const { lat, lng } = await getLatLng(results[0]);\n              panTo({ lat, lng });\n              {selectDestination({ lat, lng }, address)}\n            } catch(error){\n              console.log(\"Error!\")\n            }\n          }}\n        >\n          <ComboboxInput \n            value={value} \n            onChange={(e) => {\n              setValue(e.target.value)\n            }}\n            placeholder=\"Enter a destination address\"\n          />\n          <ComboboxPopover>\n            <ComboboxList>\n              {status === \"OK\" && \n                data.map(({place_id, description}) => (\n                  <ComboboxOption key={place_id} value={description}/>\n                ))}\n            </ComboboxList>\n          </ComboboxPopover>\n        </Combobox>\n      </div>\n  )\n}\n\nfunction SearchOrigin({ panTo, selectOrigin }) {\n\n  const {\n    value, \n    suggestions:{status, data}, \n    setValue, \n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      componentRestrictions: {country: \"us\"},\n      location: {lat: () => 40.7128, lng: () => -74.0060},\n      radius: 200 * 1000\n    }\n  })\n\n  return (\n      <div className=\"search-bar1\">\n        <Combobox \n          onSelect={async (address) => {\n            setValue(address, false);\n            clearSuggestions()\n            try {\n              const results = await getGeocode({address});\n              const { lat, lng } = await getLatLng(results[0]);\n              panTo({ lat, lng });\n              {selectOrigin({ lat, lng }, address)}\n            } catch(error){\n              console.log(\"Error!\")\n            }\n          }}\n        >\n          <ComboboxInput \n            value={value} \n            onChange={(e) => {\n              setValue(e.target.value)\n            }}\n            placeholder=\"Enter a start address\"\n          />\n          <ComboboxPopover>\n            <ComboboxList>\n              {status === \"OK\" && \n                data.map(({place_id, description}) => (\n                  <ComboboxOption key={place_id} value={description}/>\n                ))}\n            </ComboboxList>\n          </ComboboxPopover>\n        </Combobox>\n      </div>\n  )\n}\n\nfunction SearchDestination({ panTo, selectDestination, destination }) {\n\n  const {\n    value, \n    suggestions:{status, data}, \n    setValue, \n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      componentRestrictions: {country: \"us\"},\n      location: {lat: () => 40.7128, lng: () => -74.0060},\n      radius: 200 * 1000\n    }\n  })\n  \n  return (\n      <div className=\"search-bar2\">\n        <Combobox \n          onSelect={async (address) => {\n            setValue(address, false);\n            clearSuggestions()\n            try {\n              const results = await getGeocode({address});\n              const { lat, lng } = await getLatLng(results[0]);\n              panTo({ lat, lng });\n              {selectDestination({ lat, lng }, address)}\n            } catch(error){\n              console.log(\"Error!\")\n            }\n          }}\n        >\n          <ComboboxInput \n            value={value} \n            onChange={(e) => {\n              setValue(e.target.value)\n            }}\n            placeholder={destination[0].address}\n          />\n          <ComboboxPopover>\n            <ComboboxList>\n              {status === \"OK\" && \n                data.map(({place_id, description}) => (\n                  <ComboboxOption key={place_id} value={description}/>\n                ))}\n            </ComboboxList>\n          </ComboboxPopover>\n        </Combobox>\n      </div>\n\n      // value in the place holder\n  )\n}\n"]},"metadata":{},"sourceType":"module"}