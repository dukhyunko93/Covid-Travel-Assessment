{"ast":null,"code":"var _jsxFileName = \"/Users/dukhyunko/Development/Covid-Travel/Covid-Travel-Risk-Assessment-Tool-frontend/src/components/CovidAssessment.js\";\nimport * as React from 'react';\nimport { useStyletron } from 'baseui';\nimport { Table } from 'baseui/table';\n/*The hot spots map shows the share of population with a new reported case over the last week. \nParts of a county with a population density lower than 10 people per square mile are not shaded. \nData for Rhode Island is shown at the state level because county level data is infrequently reported. \nFor total cases and deaths: The map shows the known locations of coronavirus cases by county. \nCircles are sized by the number of people there who have tested positive or have a probable case of the virus, which may differ from where they contracted the illness. \nFor per capita: Parts of a county with a population density lower than 10 people per square mile are not shaded.   \n\nRisk factors:\nChances of contraction\n   population density per cases  = Density of active cases per density of population'\nChanges of death\n   Your age per deaths in this area by the number of deaths in the US ?\n   Your Age + co-morbidity + contraction %\nHeatmap\nDAILY CASES\n#of cases daily \n   > 400 Severe Level 1: Severe Uncontrolled\nCommunity Transmission\n   201 - 400 moderate  Level 2: Significant Uncontrolled\nCommunity Transmission\n101-200\nLevel 3: Moderate,\nControlled Transmission\nLevel 4: Minimal,\nControlled Transmission\n<100 \n    Density of cases per population\n    day 8 - day 7 = fist num\n    day 7 - day 6 = second num \n    day 6 - day 5 = third etx \n    get average of nums / 7 = ave cases daily\n     if daily cases are > x do some colorize on heatmap component. \n        population(x) / 100000  = popscale\n       #deaths/#cases = \n       on day 2/3/4 what is the (cases average / average deaths)\n\n*/\n\nexport default (props => {\n  const {\n    covidData,\n    population\n  } = props;\n  if (!(covidData === null || covidData === void 0 ? void 0 : covidData.length) || !(population === null || population === void 0 ? void 0 : population.length)) return null; // if (!covidData || !covidData.length )\n  // if (!covidData.length) //covidData null undefined\n\n  const deltas = covidData.reduce((total, currentValue, currentIndex) => {\n    var _nextValue$, _currentValue$;\n\n    const nextValue = covidData === null || covidData === void 0 ? void 0 : covidData[currentIndex + 1];\n    const delta = ((nextValue === null || nextValue === void 0 ? void 0 : (_nextValue$ = nextValue[0]) === null || _nextValue$ === void 0 ? void 0 : _nextValue$.cases) || 0) - ((currentValue === null || currentValue === void 0 ? void 0 : (_currentValue$ = currentValue[0]) === null || _currentValue$ === void 0 ? void 0 : _currentValue$.cases) || 0);\n    return [...total, delta];\n  }, [0]); // console.log('----deltas', deltas)\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  });\n});","map":{"version":3,"sources":["/Users/dukhyunko/Development/Covid-Travel/Covid-Travel-Risk-Assessment-Tool-frontend/src/components/CovidAssessment.js"],"names":["React","useStyletron","Table","props","covidData","population","length","deltas","reduce","total","currentValue","currentIndex","nextValue","delta","cases"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,YAAR,QAA2B,QAA3B;AACA,SAAQC,KAAR,QAAoB,cAApB;AAGC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDD,gBAAgBC,KAAD,IAAW;AACtB,QAAM;AAACC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,MAA0BF,KAAhC;AACA,MAAI,EAACC,SAAD,aAACA,SAAD,uBAACA,SAAS,CAAEE,MAAZ,KAAsB,EAACD,UAAD,aAACA,UAAD,uBAACA,UAAU,CAAEC,MAAb,CAA1B,EAA+C,OAAO,IAAP,CAFzB,CAGtB;AACA;;AACA,QAAMC,MAAM,GAAGH,SAAS,CAACI,MAAV,CAAiB,CAACC,KAAD,EAAQC,YAAR,EAAsBC,YAAtB,KAAuC;AAAA;;AACnE,UAAMC,SAAS,GAAGR,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAGO,YAAY,GAAC,CAAhB,CAA3B;AACA,UAAME,KAAK,GAAG,CAAC,CAAAD,SAAS,SAAT,IAAAA,SAAS,WAAT,2BAAAA,SAAS,CAAG,CAAH,CAAT,4DAAgBE,KAAhB,KAAyB,CAA1B,KAAgC,CAAAJ,YAAY,SAAZ,IAAAA,YAAY,WAAZ,8BAAAA,YAAY,CAAG,CAAH,CAAZ,kEAAmBI,KAAnB,KAA4B,CAA5D,CAAd;AACA,WAAO,CAAC,GAAGL,KAAJ,EAAWI,KAAX,CAAP;AACH,GAJc,EAIZ,CAAC,CAAD,CAJY,CAAf,CALsB,CAUtB;;AAEF,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAID,CAhBD","sourcesContent":["import * as React from 'react';\nimport {useStyletron} from 'baseui';\nimport {Table} from 'baseui/table';\n\n\n /*The hot spots map shows the share of population with a new reported case over the last week. \n Parts of a county with a population density lower than 10 people per square mile are not shaded. \n Data for Rhode Island is shown at the state level because county level data is infrequently reported. \n For total cases and deaths: The map shows the known locations of coronavirus cases by county. \n Circles are sized by the number of people there who have tested positive or have a probable case of the virus, which may differ from where they contracted the illness. \n For per capita: Parts of a county with a population density lower than 10 people per square mile are not shaded.   \n \n Risk factors:\nChances of contraction\n    population density per cases  = Density of active cases per density of population'\n\nChanges of death\n    Your age per deaths in this area by the number of deaths in the US ?\n    Your Age + co-morbidity + contraction %\n\nHeatmap\n\nDAILY CASES\n #of cases daily \n    > 400 Severe Level 1: Severe Uncontrolled\nCommunity Transmission\n    201 - 400 moderate  Level 2: Significant Uncontrolled\nCommunity Transmission\n\n101-200\nLevel 3: Moderate,\nControlled Transmission\n\nLevel 4: Minimal,\nControlled Transmission\n<100 \n\n    Density of cases per population\n\n    day 8 - day 7 = fist num\n     day 7 - day 6 = second num \n     day 6 - day 5 = third etx \n     get average of nums / 7 = ave cases daily\n\n     if daily cases are > x do some colorize on heatmap component. \n\n        population(x) / 100000  = popscale\n        #deaths/#cases = \n        on day 2/3/4 what is the (cases average / average deaths)\n\n\n */\n \n\n\nexport default (props) => {\n    const {covidData, population} = props;\n    if (!covidData?.length || !population?.length) return null;\n    // if (!covidData || !covidData.length )\n    // if (!covidData.length) //covidData null undefined\n    const deltas = covidData.reduce((total, currentValue, currentIndex) => {\n        const nextValue = covidData?.[currentIndex+1];\n        const delta = (nextValue?.[0]?.cases || 0) - (currentValue?.[0]?.cases || 0);\n        return [...total, delta];\n    }, [0]);\n    // console.log('----deltas', deltas)\n\n  return (\n    <div>\n    </div>\n  );\n};\n\n    \n"]},"metadata":{},"sourceType":"module"}